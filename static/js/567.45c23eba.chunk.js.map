{"version":3,"file":"static/js/567.45c23eba.chunk.js","mappings":"sPAQO,MAAMA,EAAaC,IAAqB,IAApB,WAAEC,GAAYD,EACvC,MAAM,IACJE,EAAG,aACHC,EAAY,OACZC,EAAM,MACNC,EAAK,MACLC,EAAK,OACLC,EAAM,MACNC,EAAK,YACLC,EAAW,KACXC,GACET,GAEE,iBAAEU,IAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,IAClC,EAAEC,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,UACNF,EAAAA,EAAAA,KAACG,EAAAA,GAAS,KACF,EC2Cd,EA5DuBC,KACrB,MAAOnB,EAAYoB,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAErCK,GAAcC,EAAAA,EAAAA,OACd,EAAEd,IAAMC,EAAAA,EAAAA,OACR,iBAAEJ,IAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAyCxC,OAtCAgB,EAAAA,EAAAA,YAAU,KA6Be,KAAnBF,EAAYG,SAA6BC,IAAhBJ,GA5B7BK,iBACEN,GAAa,GACb,IACE,MAAM,KAAEO,SAAeC,EAAAA,EAAAA,IAAU,gBAADC,OAAiBR,EAAYG,KACvDM,EAAW,CACf,CACElC,IAAK+B,EAAK/B,IACVC,aAAc8B,EAAK9B,aACnBI,OAAQ0B,EAAK1B,OACbD,MAAO2B,EAAK3B,MACZD,MAAO4B,EAAK5B,SACT4B,EAAKtB,GAERP,OAAQ6B,EAAK7B,OACbI,MAAOyB,EAAKzB,QAIhB,GADAa,EAAce,IACTH,GACII,EAAAA,EAAAA,IAAavB,EAAE,gCAM1B,CAJE,MAAOS,GACPC,EAASD,EACX,CAAC,QACCG,GAAa,EACf,CACF,CAGEY,EACF,GACC,CAACX,EAAYG,GAAIhB,KAEpBe,EAAAA,EAAAA,YAAU,KACRU,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAW,GACvD,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA3B,SAAA,EACEF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAG,CAACC,MAAM,aAAatC,YAAY,uBACnCgB,GAAYuB,EAAAA,EAAAA,MAAcC,EAAAA,EAAAA,KAC1B1B,IAASc,EAAAA,EAAAA,IAAavB,EAAE,iCACxBoC,OAAOC,KAAKlD,GAAYmD,OAAS,IAAM7B,IACtCP,EAAAA,EAAAA,KAACjB,EAAU,CAACE,WAAYA,MAEzB,C,kEC9DA,SAAS6C,EAAG9C,GAA0B,IAAzB,MAAE+C,EAAK,YAAEtC,GAAaT,EACxC,OACE4C,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAAAnC,SAAA,EACLF,EAAAA,EAAAA,KAAA,SAAAE,SAAQ6B,KACR/B,EAAAA,EAAAA,KAAA,QAAMN,KAAK,cAAc4C,QAAS7C,MAGxC,C","sources":["components/Team/Specialist/Specialist.jsx","pages/SpecialistPage.jsx","utils/SEO.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport defaultImg from 'images/defaultUserPhoto.jpg';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nexport const Specialist = ({ specialist }) => {\n  const {\n    _id,\n    specialistId,\n    rating,\n    email,\n    phone,\n    status,\n    image,\n    description,\n    name,\n  } = specialist;\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  return (\n    <Section>\n      <Container></Container>\n    </Section>\n  );\n};\n\nSpecialist.propTypes = {\n  specialist: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      specialistId: PropTypes.string.isRequired,\n      rating: PropTypes.number.isRequired,\n      status: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      image: PropTypes.string,\n      description: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { SEO } from 'utils/SEO';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { Specialist } from 'components/Team/Specialist/Specialist';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nconst SpecialistPage = () => {\n  const [specialist, setSpecialist] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const routeParams = useParams();\n  const { t } = useTranslation();\n  const { selectedLanguage } = useContext(StatusContext);\n  // const [lang, setLang] = useState(getFromStorage('chosenLanguage') || 'fr');\n\n  useEffect(() => {\n    async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/specialists/${routeParams.id}`);\n        const langData = [\n          {\n            _id: data._id,\n            specialistId: data.specialistId,\n            status: data.status,\n            phone: data.phone,\n            email: data.email,\n            ...data[selectedLanguage],\n            // ...data[lang],\n            rating: data.rating,\n            image: data.image,\n          },\n        ];\n        setSpecialist(langData);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (routeParams.id !== '' && routeParams !== undefined) {\n      getData();\n    }\n  }, [routeParams.id, t]);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Specialist\" description=\"Specialist profile\" />\n      {isLoading ? onLoading() : onLoaded()}\n      {error && onFetchError(t('Whoops, something went wrong'))}\n      {Object.keys(specialist).length > 0 && !error && (\n        <Specialist specialist={specialist} />\n      )}\n    </>\n  );\n};\n\nexport default SpecialistPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["Specialist","_ref","specialist","_id","specialistId","rating","email","phone","status","image","description","name","selectedLanguage","useContext","StatusContext","t","useTranslation","_jsx","Section","children","Container","SpecialistPage","setSpecialist","useState","error","setError","isLoading","setIsLoading","routeParams","useParams","useEffect","id","undefined","async","data","fetchData","concat","langData","onFetchError","getData","window","scrollTo","top","left","behavior","_jsxs","_Fragment","SEO","title","onLoading","onLoaded","Object","keys","length","Helmet","content"],"sourceRoot":""}