{"version":3,"file":"static/js/394.4ac4ef02.chunk.js","mappings":"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","sources":["components/Events/Events.styled.js","components/baseStyles/Button.styled.js","components/Events/EventsList/EventList.styled.js","components/Events/EventsList/EventList.jsx","components/Events/Events.jsx","pages/EventsPage.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Headline } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding: 50px 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nexport const Heading = styled(Headline)`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 50px;\n    margin-bottom: 40px;\n    font-size: 42px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 80px;\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px 30px;\n`;\n\nexport const Event = styled.li``;\n\nexport const EventNavLink = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const EventImages = styled.img`\n  width: 350px;\n  height: 300px;\n  border-radius: 40px;\n  /* transition: ${theme.transition}; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 378px;\n    height: 393px;\n  }\n\n  /* &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  } */\n`;\n\nexport const EventDetailBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  border-radius: 40px;\n  background: #fcf9f2;\n  padding: 25px 40px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 300px;\n    padding: 25px 45px;\n  }\n`;\n\nexport const EventDetailTitle = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n`;\n\nexport const EventDetailDate = styled.ul`\n  margin-right: 45px;\n`;\n\nexport const EventDetailDateLi = styled.li``;\n\nexport const EventDetailDateText = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px;\n  text-transform: uppercase;\n  margin-bottom: 7px;\n`;\n\nexport const EventDetailDateText2 = styled.p`\n  color: ${theme.colors.grey1};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px;\n  text-transform: uppercase;\n`;\n\nexport const DetailsBoxDiscr = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n\n  margin-top: 20px;\n  margin-bottom: 25px;\n`;\n\n// export const EventDetailTitle = styled.p``\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  DetailsBox,\n  DetailsBoxDiscr,\n  Event,\n  EventDetailBox,\n  EventDetailDate,\n  EventDetailDateLi,\n  EventDetailDateText,\n  EventDetailDateText2,\n  EventDetailTitle,\n  EventImages,\n  EventNavLink,\n  List,\n} from './EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\nimport { useState } from 'react';\nimport { BtnLink } from 'components/baseStyles/Button.styled';\n\nexport const EventsList = ({ events, activeEvents }) => {\n  const { t } = useTranslation();\n\n  const [isHovered, setHovered] = useState(null);\n  // const today = new Date();\n  // const activeEvents = events.filter(({ date }) => new Date(date) >= today);\n  const widthWindow = window.innerWidth;\n\n  const handleMouseEnter = eventId => {\n    setHovered(eventId);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  return (\n    <>\n      <div>Calendar</div>\n\n      <div>Filtr</div>\n      <List>\n        {events.map(event => {\n          return (\n            // data-aos=\"zoom-in-up\" data-aos-delay=\"200\"\n            <Event key={event._id}>\n              <EventNavLink\n                onMouseEnter={() => handleMouseEnter(event._id)}\n                onMouseLeave={handleMouseLeave}\n              >\n                <EventImages\n                  src={\n                    event.image\n                      ? BASE_URL_IMG +\n                        event.image.split('/')[\n                          event.image.split('/').length - 1\n                        ]\n                      : defaultImg\n                  }\n                  alt={event.title}\n                  loading=\"lazy\"\n                />\n\n                {isHovered === event._id && (\n                  <EventDetailBox>\n                    <EventDetailTitle>{event.name}</EventDetailTitle>\n\n                    <DetailsBox>\n                      <EventDetailDate>\n                        <EventDetailDateLi>\n                          <EventDetailDateText>Дата</EventDetailDateText>\n                        </EventDetailDateLi>\n                        <EventDetailDateLi>\n                          <EventDetailDateText2>\n                            {event.date}\n                          </EventDetailDateText2>\n                        </EventDetailDateLi>\n                      </EventDetailDate>\n\n                      <ul>\n                        <li>\n                          <EventDetailDateText>Час</EventDetailDateText>\n                        </li>\n                        <li>\n                          <EventDetailDateText2>\n                            {event.time}\n                          </EventDetailDateText2>\n                        </li>\n                      </ul>\n                    </DetailsBox>\n\n                    <DetailsBoxDiscr>\n                      {event.description.length > 50\n                        ? event.description.slice(0, 50) + ' ...'\n                        : event.description}\n                    </DetailsBoxDiscr>\n\n                    <BtnLink\n                      to={`/events/${event.article_event}`}\n                      activeEvents={activeEvents}\n                    >\n                      <span>{t('Детальніше')}</span>\n                    </BtnLink>\n                  </EventDetailBox>\n                )}\n              </EventNavLink>\n            </Event>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nEventsList.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      language: PropTypes.string,\n      image: PropTypes.string,\n    })\n  ),\n  activeEvents: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\n{\n  /* <DetailsWrapper>\n<DataPlaceWrapper>\n  <EventDate>\n    {new Date(event.date).toLocaleDateString()} | {event.time}\n  </EventDate>\n  <EventDate>{event.location}</EventDate>\n</DataPlaceWrapper>\n<EventTitle>{event.title}</EventTitle>\n{widthWindow && (\n  <EventDesc>\n    {/* {event.description.length > 300\n      ? event.description.slice(0, 300) + ' ...'\n      : event.description} */\n}\n// {event.fr.description}\n// </EventDesc>\n// )}\n{\n  /* <BtnLink to={`/events/${event._id}`}> */\n}\n// <span>{t('More')}</span>\n// </BtnLink>\n// </DetailsWrapper> */}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventsList } from './EventsList/EventList';\nimport { ArchiveEventsList } from './ArchiveEventsList/ArchiveEventList';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { EventsSection, Heading } from './Events.styled';\nimport { Container, Title } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nexport const Events = () => {\n  const [events, setEvents] = useState([]);\n  const [activeEvents, setActiveEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  // useEffect(() => {\n  //   (async function getData() {\n  //     setIsLoading(true);\n  //     try {\n  //       const { data } = await fetchData(`/active_events`);\n  //       if (!data) {\n  //         return onFetchError('Whoops, something went wrong');\n  //       }\n\n  //       // const langData = [\n  //       //   ...new Set(\n  //       //     data.map(item => item[selectedLanguage]).filter(item => item !== undefined),\n  //       //   ),\n  //       // ];\n\n  //       let langData = [];\n  //       data.map(it => {\n  //         let item = [\n  //           {\n  //             // _id: it._id,\n  //             // article_event: it.article_event,\n  //             // date: it.date,\n  //             // time: it.time,\n  //             // name: it.name,\n  //             // description: it.description,\n  //             _id: it._id,\n  //             article_eventID: it.article_eventID,\n  //             eventId: it.eventId,\n  //             date: it.date,\n  //             time: it.time,\n  //             price: it.price,\n  //             seats: it.seats,\n  //             booking: it.booking,\n  //             vacancies: it.vacancies,\n  //             language: it.language,\n  //             language_secondary: it.language_secondary,\n  //             location: it.location,\n  //             ...it[selectedLanguage],\n  //           },\n  //         ];\n  //         langData.push(item[0]);\n  //       });\n  //       setActiveEvents(langData);\n  //     } catch (error) {\n  //       setError(error);\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   })();\n  // }, [selectedLanguage]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_event: it.article_event,\n              name: it.name,\n              description: it.description,\n              image: it.image,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  console.log(events);\n\n  return (\n    <EventsSection>\n      <Container>\n        <Title>{t('Events calendar')}</Title>\n\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {/* && activeEvents.length  activeEvents={activeEvents}*/}\n        {events.length > 0 && !error && <EventsList events={events} />}\n\n        {/* <Heading>{t('Archive of past events')}</Heading> */}\n        {/* {isLoading ? onLoading() : onLoaded()} */}\n        {/* {error && onFetchError('Whoops, something went wrong')} */}\n        {/* {events.length > 0 && !error && <ArchiveEventsList events={events} />} */}\n      </Container>\n    </EventsSection>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Events } from 'components/Events/Events';\n\nconst EventsPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Events calendar\" description=\"Events calendar\" />\n      <Events />\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["EventsSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","Headline","_templateObject2","BtnLight","BtnAccent","BtnLink","NavLink","_templateObject3","List","Event","EventNavLink","EventImages","_templateObject4","EventDetailBox","_templateObject5","EventDetailTitle","_templateObject6","DetailsBox","_templateObject7","EventDetailDate","_templateObject8","EventDetailDateLi","_templateObject9","EventDetailDateText","_templateObject10","EventDetailDateText2","_templateObject11","DetailsBoxDiscr","_templateObject12","EventsList","_ref","events","activeEvents","t","useTranslation","isHovered","setHovered","useState","handleMouseLeave","window","innerWidth","_jsxs","_Fragment","children","_jsx","map","event","onMouseEnter","handleMouseEnter","eventId","_id","onMouseLeave","src","image","BASE_URL_IMG","split","length","defaultImg","alt","title","loading","name","date","time","description","slice","to","concat","article_event","Events","setEvents","setActiveEvents","error","setError","isLoading","setIsLoading","selectedLanguage","useContext","StatusContext","useEffect","data","fetchData","onFetchError","langData","it","item","push","console","log","Container","Title","onLoading","onLoaded","EventsPage","scrollTo","top","left","behavior","SEO","Helmet","content"],"sourceRoot":""}