{"version":3,"file":"static/js/299.635703b3.chunk.js","mappings":"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","sources":["components/FormMessage/FormMessage.styled.js","components/FormMessage/FormMessage.jsx","components/Home/TopEvents/TopEvents.styled.js","components/Home/TopSpecialists/TopSpecialists.styled.js","components/baseStyles/Button.styled.js","helpers/BackLink/BackLink.styled.js","helpers/BackLink/BackLink.jsx","components/Specialist/Specialist.styled.js","components/Specialist/Specialist.jsx","pages/SpecialistPage.jsx","utils/SEO.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section } from 'components/baseStyles/CommonStyle.styled';\n\nexport const FormList = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 45px;\n    padding: 0 70px;\n  }\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    grid-template-columns: 1fr 1fr;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 70px;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 100%;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const FormName = styled.span`\n  margin-bottom: 15px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n`;\n\nexport const FormInput = styled(Field)`\n  width: 100%;\n  padding: 15px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${theme.colors.grey2};\n\n  background: ${theme.colors.white};\n  border-color: transparent;\n  border: 1px solid ${theme.colors.grey2};\n  border-radius: 10px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: 530px;\n    padding: 25px 30px;\n  }\n\n  &:focus-visible {\n    border: 0.5px solid ${theme.colors.accent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.grey2};\n    font-family: ${theme.fonts[0]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n\nexport const Error = styled.span`\n  position: absolute;\n  bottom: -10px;\n  right: 0;\n  z-index: 2;\n\n  font-family: ${theme.fonts[0]};\n  font-style: normal;\n  font-weight: 400;\n  font-size: 8px;\n  text-align: right;\n  color: ${theme.colors.red};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 12px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  position: absolute;\n  bottom: 1px;\n  right: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n\n  border: none;\n  border-radius: 50%;\n  background-color: transparent;\n\n  cursor: pointer;\n  transform: ${theme.transition};\n  transition: ${theme.transition};\n\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.fon};\n  }\n  &:disabled {\n    svg {\n      fill: ${theme.colors.grey1};\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 32px;\n    height: 32px;\n    margin-left: 24px;\n  }\n`;\n\nexport const FormInputMessage = styled.textarea`\n  height: 100%;\n  padding: 15px;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${theme.colors.grey2};\n\n  background: ${theme.colors.white};\n  border: 1px solid ${theme.colors.grey2};\n  border-radius: 10px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: 530px;\n    padding: 25px 30px;\n  }\n\n  &:focus-visible {\n    border: 0.5px solid ${theme.colors.accent};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.grey2};\n    font-family: ${theme.fonts[0]};\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { createData } from 'services/APIservice';\nimport { addMessages } from '../../redux/messages/operation';\nimport { BtnAccent } from 'components/baseStyles/Button.styled';\nimport {\n  Error,\n  FieldsWrapper,\n  FormInput,\n  FormInputMessage,\n  FormLabel,\n  FormList,\n  FormName,\n} from './FormMessage.styled';\n\nexport const FormMessage = ({ specialist }) => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  async function createMessage(values) {\n    setIsLoading(true);\n    try {\n      const { data } = await createData(`/messages`, values);\n      dispatch(addMessages({ ...data }));\n      if (!data) {\n        return onFetchError('Whoops, something went wrong');\n      }\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        message: '',\n        specialistId: specialist?.specialistId ? specialist.specialistId : '',\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        createMessage(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n      enableReinitialize={true}\n    >\n      {({\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n        isSubmitting,\n        values,\n        errors,\n        touched,\n      }) => (\n        <FormList\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n          onChange={handleChange}\n        >\n          <FieldsWrapper>\n            <div>\n              <FormLabel htmlFor=\"name\">\n                <FormName>{t('Ім’я')}</FormName>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder={specialist?.name ? specialist.name : 'Olga'}\n                  value={values.name}\n                  required\n                />\n                {errors.name && touched.name ? (\n                  <Error>{errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormLabel htmlFor=\"email\">\n                <FormName>{t('E-mail')}</FormName>\n                <FormInput\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"test@gmail.com\"\n                  value={values.email}\n                  required\n                />\n                {errors.email && touched.email ? (\n                  <Error>{errors.email}</Error>\n                ) : null}\n              </FormLabel>\n            </div>\n            <FormLabel htmlFor=\"message\">\n              <FormName>{t('Повідомлення')}</FormName>\n              <FormInputMessage\n                type=\"text\"\n                name=\"message\"\n                id=\"message\"\n                placeholder={t('Привіт! Я хотів би запитати про...')}\n                value={values.message}\n                required\n                rows=\"6\"\n                cols=\"25\"\n                onChange={e => {\n                  setFieldValue('message', e.target.value);\n                }}\n              />\n              {errors.state && touched.state ? (\n                <Error>{errors.state}</Error>\n              ) : null}\n            </FormLabel>\n          </FieldsWrapper>\n          <BtnAccent type=\"submit\" disabled={isSubmitting} aria-label=\"Submit\">\n            {t('Надіслати')}\n          </BtnAccent>\n        </FormList>\n      )}\n    </Formik>\n  );\n};\n\nFormMessage.propTypes = {\n  specialist: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    specialistId: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    status: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding-bottom: 75px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-bottom: 120px;\n  }\n`;\n\nexport const BtnLinkText = styled(NavLink)`\n  display: block;\n  margin-bottom: 20px;\n  padding-bottom: 2px;\n  text-align: end;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n  color: ${theme.colors.grey2};\n\n  /* text-decoration: none; */\n  transition: ${theme.transition};\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const EventListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n`;\n\nexport const ViewportBox = styled.div`\n  display: ${props => (props.$mobile ? 'block' : 'none')};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    display: ${props => (props.$mobile ? 'none' : 'block')};\n  }\n`;\n\nexport const ItemImg = styled.img`\n  width: 350px;\n  height: 300px;\n  border-radius: 40px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 402px;\n    height: 366px;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  width: 280px;\n  height: 280px;\n  padding: 40px 20px;\n\n  border-radius: 40px;\n  background: ${theme.colors.fon};\n`;\n\nexport const Name = styled.span`\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%; /* 24px */\n  color: ${theme.colors.grey1};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DateTimeWrapper = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n\n  & li {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n  }\n`;\n\nexport const Head = styled.span`\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px; /* 80.133% */\n  text-transform: uppercase;\n  text-align: center;\n  color: ${theme.colors.grey2};\n`;\n\nexport const DateTime = styled.span`\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px; /* 212.5% */\n  text-transform: uppercase;\n  text-align: center;\n  color: ${theme.colors.grey1};\n`;\n\nexport const Describe = styled.p`\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%; /* 24px */\n  color: ${theme.colors.grey2};\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  margin-top: 25px;\n`;\n\nexport const BtnPagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 48px;\n  height: 48px;\n  flex-shrink: 0;\n\n  color: ${theme.colors.primary};\n  background-color: ${theme.colors.white};\n  border-radius: 50%;\n  filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.16));\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  &:hover,\n  &:focus {\n    filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.3));\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nconst GoBack = styled(Link)`\n  all: unset;\n\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n\n  margin-right: auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: normal;\n  text-transform: capitalize;\n  color: ${theme.colors.grey2};\n\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport { GoBack };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { GoBack } from './BackLink.styled';\n\nexport const BackButton = ({ to, children }) => {\n  return (\n    <GoBack to={to}>\n      <HiArrowLeft size={16} />\n      {children}\n    </GoBack>\n  );\n};\nBackButton.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section } from 'components/baseStyles/CommonStyle.styled';\nimport { ViewportBox } from 'components/Home/TopEvents/TopEvents.styled';\n\nexport const DescriptionSection = styled(Section)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 35px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 182px;\n  height: 216px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 350px;\n    height: 403px;\n  }\n`;\n\nexport const EventsSection = styled(Section)`\n  padding-top: 0;\n`;\n\nexport const SViewportBox = styled(ViewportBox)`\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    & .swiper-wrapper {\n      justify-content: center !important;\n    }\n  }\n`;\n\nexport const MessageSection = styled(Section)`\n  padding-top: 0;\n  padding-bottom: 75px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-bottom: 120px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Mousewheel, Keyboard, Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport { FormMessage } from 'components/FormMessage/FormMessage';\nimport { BackButton } from 'helpers/BackLink/BackLink';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport defaultImg from 'images/defaultUserPhoto.jpg';\nimport {\n  Container,\n  Headline,\n  Subtitle,\n  Title,\n} from 'components/baseStyles/CommonStyle.styled';\nimport { BtnLink } from 'components/baseStyles/Button.styled';\nimport {\n  DescriptionSection,\n  EventsSection,\n  Image,\n  MessageSection,\n  SViewportBox,\n} from './Specialist.styled';\nimport {\n  DateTime,\n  DateTimeWrapper,\n  Describe,\n  DetailsWrapper,\n  EventListItem,\n  Head,\n  ItemImg,\n  Name,\n  ViewportBox,\n} from 'components/Home/TopEvents/TopEvents.styled';\nimport {\n  BtnPagination,\n  Pagination,\n} from 'components/Home/TopSpecialists/TopSpecialists.styled';\n\nexport const Specialist = ({ specialist }) => {\n  const { specialistId, image, description, name } = specialist;\n  const [events, setEvents] = useState([]);\n  const [activeEvents, setActiveEvents] = useState([]);\n  const [specialistEvents, setSpecialistEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        let langData = [];\n        data\n          .filter(item => item.specialistId === specialistId)\n          .map(event => {\n            let item = [\n              {\n                _id: event._id,\n                article_event: event.article_event,\n                language: event.language,\n                image: event.image,\n                image_1: event.image_1,\n                image_2: event.image_2,\n                rating: event.rating,\n                duration: event.duration,\n                category: event.category,\n                specialistId: event.specialistId,\n                ...event[selectedLanguage],\n              },\n            ];\n            langData.push(item[0]);\n          });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setActiveEvents(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  // useEffect(() => {\n  //   let specialistActiveEvents = activeEvents.filter(event =>\n  //     events.every(item => item.article_event === event.eventId)\n  //   );\n  //   setSpecialistEvents(specialistActiveEvents);\n  // }, [activeEvents, events]);\n\n  useEffect(() => {\n    let array = [];\n    activeEvents.map(it => {\n      events.map(item => {\n        if (it.eventId === item.article_event) {\n          let data = {};\n          (data._id = it._id),\n            (data.article_event = item.article_event),\n            (data.language = it.language),\n            (data.language_secondary = it.language_secondary),\n            (data.language_third = it.language_third),\n            (data.price = it.price),\n            (data.date = it.date),\n            (data.time = it.time),\n            (data.location = it.location),\n            (data.address = it.address),\n            (data.seats = it.seats),\n            (data.booking = it.booking),\n            (data.vacancies = it.vacancies),\n            (data.image = item.image),\n            (data.image_1 = item.image_1),\n            (data.image_2 = item.image_2),\n            (data.rating = item.rating),\n            (data.duration = item.duration),\n            (data.category = item.category),\n            (data.specialistId = item.specialistId),\n            (data.description = item.description),\n            (data.name = item.name),\n            array.push(data);\n        }\n      });\n    });\n    setSpecialistEvents(array);\n  }, [activeEvents, events]);\n\n  const firstName = name => {\n    let firstWord = name.indexOf(' ');\n    if (firstWord == -1) {\n      return name;\n    }\n    return name.slice(0, firstWord);\n  };\n\n  const [isHovered, setHovered] = useState(null);\n\n  const handleMouseEnter = eventId => {\n    setHovered(eventId);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  return (\n    <Container>\n      <DescriptionSection>\n        <BackButton to=\"/specialists\">{t('Назад')}</BackButton>\n        <Image\n          src={\n            image\n              ? BASE_URL_IMG +\n                'avatars/' +\n                image.split('/')[image.split('/').length - 1]\n              : defaultImg\n          }\n          alt={name}\n          width=\"182\"\n          height=\"216\"\n          loading=\"lazy\"\n        ></Image>\n        <Headline\n          data-aos=\"fade-right\"\n          // data-aos=\"zoom-in\"\n          data-aos-easing=\"linear\"\n          data-aos-duration=\"1000\"\n        >\n          {name}\n        </Headline>\n        <Subtitle\n          style={{ textAlign: 'justify' }}\n          data-aos=\"fade-left\"\n          // data-aos=\"zoom-in\"\n          data-aos-easing=\"linear\"\n          data-aos-duration=\"1000\"\n        >\n          {description}\n        </Subtitle>\n      </DescriptionSection>\n      <EventsSection>\n        <Title>\n          {t('Найближчі заходи')} {firstName(name)}\n        </Title>\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError(t('Whoops, something went wrong'))}\n        {specialistEvents.length > 0 && !error ? (\n          <>\n            <SViewportBox>\n              <Swiper\n                modules={[Navigation, Mousewheel, Keyboard, Autoplay]}\n                // breakpoints={{\n                //   375: {\n                //     spaceBetween: 50,\n                //     slidesPerView: 1,\n                //     mousewheel: true,\n                //     autoplay: {\n                //       delay: 5000,\n                //     },\n                //     effect: 'creative',\n                //   },\n                //   768: {\n                //     spaceBetween: 50,\n                //     slidesPerView: 2,\n                //     autoplay: { delay: 5000 },\n                //     effect: 'creative',\n                //   },\n                //   1440: {\n                //     spaceBetween: 50,\n                //     slidesPerView: 3,\n                //   },\n                // }}\n                spaceBetween={50}\n                slidesPerView={3}\n                mousewheel={true}\n                navigation={{\n                  prevEl: '.swiper-button-prev',\n                  nextEl: '.swiper-button-next',\n                }}\n                pagination={{ clickable: true }}\n                keyboard={true}\n                loop={true}\n                loopPreventsSliding={true}\n                loopedslides={1}\n              >\n                {specialistEvents.slice(0, 5).map(event => {\n                  return (\n                    <SwiperSlide key={event.article_event}>\n                      <EventListItem\n                        onMouseEnter={() =>\n                          handleMouseEnter(event.article_event)\n                        }\n                        onMouseLeave={handleMouseLeave}\n                      >\n                        <ItemImg\n                          key={event.article_event}\n                          src={\n                            event.image\n                              ? BASE_URL_IMG +\n                                'events/' +\n                                event.image.split('/')[\n                                  event.image.split('/').length - 1\n                                ]\n                              : defaultImg\n                          }\n                          alt={event.name}\n                          width=\"402\"\n                          height=\"366\"\n                          loading=\"lazy\"\n                        />\n                        {isHovered === event.article_event && (\n                          <DetailsWrapper>\n                            <Name>{event.name}</Name>\n                            <DateTimeWrapper>\n                              <li>\n                                <Head>{t('дата')}</Head>\n                                <DateTime>\n                                  {new Date(event.date).toLocaleDateString()}\n                                </DateTime>\n                              </li>\n                              <li>\n                                <Head>{t('час')}</Head>\n                                <DateTime>{event.time}</DateTime>\n                              </li>\n                            </DateTimeWrapper>\n                            <Describe>\n                              {event.description.length > 50\n                                ? event.description.slice(0, 50) + ' ...'\n                                : event.description}\n                            </Describe>\n                            <BtnLink to={`/events/${event.article_event}`}>\n                              <span>{t('Детальніше')}</span>\n                            </BtnLink>\n                          </DetailsWrapper>\n                        )}\n                      </EventListItem>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n              {specialistEvents.length > 3 && (\n                <Pagination>\n                  <BtnPagination className=\"swiper-button-prev\">\n                    <MdKeyboardArrowLeft size={30} className=\"buttonSlide\" />\n                  </BtnPagination>\n                  <BtnPagination className=\"swiper-button-next\">\n                    <MdKeyboardArrowRight size={30} className=\"buttonSlide\" />\n                  </BtnPagination>\n                </Pagination>\n              )}\n            </SViewportBox>\n            <ViewportBox $mobile>\n              <Swiper\n                modules={[Navigation, Mousewheel, Keyboard, Autoplay]}\n                spaceBetween={50}\n                slidesPerView={1}\n                mousewheel={true}\n                navigation={{\n                  prevEl: '.swiper-button-prev',\n                  nextEl: '.swiper-button-next',\n                }}\n                pagination={{ clickable: true }}\n                keyboard={true}\n                loop={true}\n                loopPreventsSliding={true}\n                loopedslides={1}\n                autoplay={{ delay: 5000 }}\n                effect={'creative'}\n              >\n                {specialistEvents.slice(0, 5).map(event => {\n                  return (\n                    <SwiperSlide key={event.article_event}>\n                      <EventListItem\n                        onMouseEnter={() =>\n                          handleMouseEnter(event.article_event)\n                        }\n                        onMouseLeave={handleMouseLeave}\n                      >\n                        <ItemImg\n                          key={event.article_event}\n                          src={\n                            event.image\n                              ? BASE_URL_IMG +\n                                'events/' +\n                                event.image.split('/')[\n                                  event.image.split('/').length - 1\n                                ]\n                              : defaultImg\n                          }\n                          alt={event.name}\n                          width=\"402\"\n                          height=\"366\"\n                          loading=\"lazy\"\n                        />\n                        {isHovered === event.article_event && (\n                          <DetailsWrapper>\n                            <Name>{event.name}</Name>\n                            <DateTimeWrapper>\n                              <li>\n                                <Head>{t('дата')}</Head>\n                                <DateTime>\n                                  {new Date(event.date).toLocaleDateString()}\n                                </DateTime>\n                              </li>\n                              <li>\n                                <Head>{t('час')}</Head>\n                                <DateTime>{event.time}</DateTime>\n                              </li>\n                            </DateTimeWrapper>\n                            <Describe>\n                              {event.description.length > 50\n                                ? event.description.slice(0, 50) + ' ...'\n                                : event.description}\n                            </Describe>\n                            <BtnLink to={`/events/${event.article_event}`}>\n                              <span>{t('Детальніше')}</span>\n                            </BtnLink>\n                          </DetailsWrapper>\n                        )}\n                      </EventListItem>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n              {specialistEvents.length > 1 && (\n                <Pagination>\n                  <BtnPagination className=\"swiper-button-prev\">\n                    <MdKeyboardArrowLeft size={30} className=\"buttonSlide\" />\n                  </BtnPagination>\n                  <BtnPagination className=\"swiper-button-next\">\n                    <MdKeyboardArrowRight size={30} className=\"buttonSlide\" />\n                  </BtnPagination>\n                </Pagination>\n              )}\n            </ViewportBox>\n          </>\n        ) : (\n          <Subtitle>\n            {t(\n              'Вибачте, найближчим часом спеціаліст не проводить майстер-класи'\n            )}\n          </Subtitle>\n        )}\n      </EventsSection>\n      <MessageSection>\n        <Title>\n          {t('Є питання до')} {firstName(name)}?\n        </Title>\n        <FormMessage specialist={specialist} />\n      </MessageSection>\n    </Container>\n  );\n};\n\nSpecialist.propTypes = {\n  specialist: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    specialistId: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    status: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","import { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { SEO } from 'utils/SEO';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { Specialist } from 'components/Specialist/Specialist';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nconst SpecialistPage = () => {\n  const [specialist, setSpecialist] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const routeParams = useParams();\n  const { t } = useTranslation();\n  const { selectedLanguage } = useContext(StatusContext);\n  // const [lang, setLang] = useState(getFromStorage('chosenLanguage') || 'fr');\n\n  useEffect(() => {\n    async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/specialists/${routeParams.id}`);\n        const langData = [\n          {\n            _id: data._id,\n            specialistId: data.specialistId,\n            status: data.status,\n            phone: data.phone,\n            email: data.email,\n            ...data[selectedLanguage],\n            // ...data[lang],\n            rating: data.rating,\n            image: data.image,\n          },\n        ];\n        setSpecialist(langData[0]);\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (routeParams.id !== '' && routeParams !== undefined) {\n      getData();\n    }\n  }, [routeParams.id, t]);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Specialist\" description=\"Specialist profile\" />\n      {isLoading ? onLoading() : onLoaded()}\n      {error && onFetchError(t('Whoops, something went wrong'))}\n      {Object.keys(specialist).length > 0 && !error && (\n        <Specialist specialist={specialist} />\n      )}\n    </>\n  );\n};\n\nexport default SpecialistPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["FormList","styled","Form","_templateObject","_taggedTemplateLiteral","theme","FieldsWrapper","_templateObject2","FormLabel","_templateObject3","FormName","_templateObject4","FormInput","Field","_templateObject5","Error","_templateObject6","FormInputMessage","_templateObject7","_templateObject8","FormMessage","_ref","specialist","error","setError","useState","isLoading","setIsLoading","t","useTranslation","dispatch","useDispatch","_jsx","Formik","initialValues","name","email","message","specialistId","onSubmit","values","_ref2","setSubmitting","resetForm","async","data","createData","addMessages","onFetchError","createMessage","enableReinitialize","children","_ref3","handleChange","handleSubmit","setFieldValue","isSubmitting","errors","touched","_jsxs","autoComplete","onChange","htmlFor","type","id","placeholder","value","required","rows","cols","e","target","state","BtnAccent","disabled","EventsSection","Section","BtnLinkText","NavLink","EventListItem","ViewportBox","props","$mobile","ItemImg","DetailsWrapper","Name","DateTimeWrapper","Head","_templateObject9","DateTime","_templateObject10","Describe","_templateObject11","Pagination","BtnPagination","BtnLight","BtnLink","GoBack","Link","BackButton","to","HiArrowLeft","size","DescriptionSection","Image","SViewportBox","MessageSection","Specialist","image","description","events","setEvents","activeEvents","setActiveEvents","specialistEvents","setSpecialistEvents","selectedLanguage","useContext","StatusContext","useEffect","fetchData","langData","filter","item","map","event","_id","article_event","language","image_1","image_2","rating","duration","category","push","array","it","eventId","language_secondary","language_third","price","date","time","location","address","seats","booking","vacancies","firstName","firstWord","indexOf","slice","isHovered","setHovered","handleMouseEnter","handleMouseLeave","Container","src","BASE_URL_IMG","split","length","defaultImg","alt","width","height","loading","Headline","Subtitle","style","textAlign","Title","onLoading","onLoaded","_Fragment","Swiper","modules","Navigation","Mousewheel","Keyboard","Autoplay","spaceBetween","slidesPerView","mousewheel","navigation","prevEl","nextEl","pagination","clickable","keyboard","loop","loopPreventsSliding","loopedslides","SwiperSlide","onMouseEnter","onMouseLeave","Date","toLocaleDateString","concat","className","MdKeyboardArrowLeft","MdKeyboardArrowRight","autoplay","delay","effect","SpecialistPage","setSpecialist","routeParams","useParams","undefined","status","phone","getData","window","scrollTo","top","left","behavior","SEO","title","Object","keys","Helmet","content"],"sourceRoot":""}