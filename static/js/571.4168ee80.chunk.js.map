{"version":3,"file":"static/js/571.4168ee80.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { useFormik, Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\n// import { logIn } from '../redux/auth/operations';\nimport schemas from 'utils/schemas';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Container } from 'components/baseStyles/CommonStyle.styled';\nimport { Error, FormField, FormLabel } from 'components/baseStyles/Form.styled';\nimport {\n  TitleLogin,\n  ErrorBox,\n  FormInputLogin,\n  ShowPassword,\n  Btn,\n  StyledLink,\n  BoxText,\n  FormContainer,\n  FormStyled,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const { t } = useTranslation();\n\n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    // dispatch(\n    //   logIn({\n    //     email,\n    //     password,\n    //   })\n    // );\n    setIsLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n  return (\n    <Section>\n      <Container>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormStyled onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{t('Log In')}</TitleLogin>\n            <FormField>\n              <FormLabel htmlFor=\"email\">\n                <span>{t('Email')}</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.email,\n                    formik.errors.email\n                  ),\n                }}\n                name=\"email\"\n                type=\"email\"\n                validate={schemas.schemasLogin.email}\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n              />\n            </FormField>\n            <FormField>\n              <FormLabel htmlFor=\"password\">\n                <span>{t('Password')}</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.password,\n                    formik.errors.password\n                  ),\n                }}\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                onBlur={formik.handleBlur}\n              />\n              <ShowPassword onClick={showPassword}>\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              {formik.errors.password && formik.touched.password ? (\n                <ErrorBox>{formik.errors.password}</ErrorBox>\n              ) : null}\n            </FormField>\n            <FormContainer>\n              <BoxText>\n                <StyledLink to=\"/forgot_password\">\n                  {t('Forgot password?')}\n                </StyledLink>\n              </BoxText>\n              <Btn type=\"submit\" disabled={isValid} aria-label=\"submit log in\">\n                {isLoading ? 'Loading' : t('Log In')}\n              </Btn>\n            </FormContainer>\n          </FormStyled>\n        </Formik>\n      </Container>\n    </Section>\n  );\n};\n\nexport default LoginForm;\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport LoginForm from 'components/Auth/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Login\" description=\"\" />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginForm","t","useTranslation","showPass","setShowPass","useState","isLoading","setIsLoading","formik","useDispatch","useFormik","initialValues","email","password","validationSchema","schemas","onSubmit","values","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","theme","_jsx","Section","children","Container","Formik","_jsxs","FormStyled","handleSubmit","autoComplete","TitleLogin","FormField","FormLabel","htmlFor","name","Error","FormInputLogin","style","borderColor","type","validate","onChange","handleChange","value","onBlur","handleBlur","ShowPassword","onClick","showPassword","ImEye","ImEyeBlocked","ErrorBox","FormContainer","BoxText","StyledLink","to","Btn","disabled","LoginPage","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","title","description"],"sourceRoot":""}