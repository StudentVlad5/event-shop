{"version":3,"file":"static/js/880.93a519ee.chunk.js","mappings":"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","sources":["components/Events/Events.styled.js","components/baseStyles/Button.styled.js","components/Events/EventsList/EventList.styled.js","components/Events/EventsList/EventList.jsx","images/events/calendar.svg","components/Events/Calendar/Calendar.styled.js","components/Events/Calendar/calendar.js","components/Events/Filters/Filters.styled.js","components/Events/Filters/Filters.jsx","components/Events/Events.jsx","pages/EventsPage.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Headline } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding: 50px 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nexport const Heading = styled(Headline)`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 50px;\n    margin-bottom: 40px;\n    font-size: 42px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n  &:disabled {\n    color: ${theme.colors.brown2};\n    background-color: ${theme.colors.grey1};\n    opacity: 0.4;\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { BtnLight } from 'components/baseStyles/Button.styled';\n\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px 30px;\n`;\n\nexport const Event = styled.li``;\n\nexport const EventNavLink = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const EventImages = styled.img`\n  width: 350px;\n  height: 300px;\n  border-radius: 40px;\n  /* transition: ${theme.transition}; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 378px;\n    height: 393px;\n  }\n\n  /* &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  } */\n`;\n\nexport const EventDetailBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  border-radius: 40px;\n  background: #fcf9f2;\n  padding: 25px 40px;\n\n  animation: ${fadeInUp} 0.3s ease;\n  $display: ${props => props.$ishovered};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 300px;\n    padding: 25px 45px;\n  }\n`;\n\nexport const EventDetailTitle = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n`;\n\nexport const EventDetailDate = styled.ul`\n  margin-right: 45px;\n`;\n\nexport const EventDetailDateLi = styled.li``;\n\nexport const EventDetailDateText = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px;\n  text-transform: uppercase;\n  margin-bottom: 7px;\n`;\n\nexport const EventDetailDateText2 = styled.p`\n  color: ${theme.colors.grey1};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px;\n  text-transform: uppercase;\n`;\n\nexport const DetailsBoxDiscr = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n\n  margin-top: 20px;\n  margin-bottom: 25px;\n`;\n\nexport const NoEvents = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const CleanFilterBtn = styled.button`\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%;\n  background-color: transparent;\n  border-color: transparent;\n  border-bottom: 1px solid ${theme.colors.grey2};\n  cursor: pointer;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n`;\n\nexport const BtnLightEvents = styled(BtnLight)`\nmargin-top: 45px;\n`;\n// export const EventDetailTitle = styled.p``\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  BtnLightEvents,\n  CleanFilterBtn,\n  DetailsBox,\n  DetailsBoxDiscr,\n  Event,\n  EventDetailBox,\n  EventDetailDate,\n  EventDetailDateLi,\n  EventDetailDateText,\n  EventDetailDateText2,\n  EventDetailTitle,\n  EventImages,\n  EventNavLink,\n  List,\n  NoEvents,\n} from './EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\nimport { useEffect, useState } from 'react';\nimport { BtnLink } from 'components/baseStyles/Button.styled';\nimport { getFromStorage, removeItem } from 'services/localStorService';\n\nexport const EventsList = ({ events, activeEvents, currentWeek, setCurrentWeek }) => {\n  const { t } = useTranslation();\n  // const [activeEvents, setActiveEvents] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const [isHovered, setHovered] = useState(null);\n  // const today = new Date();\n  // const activeEvents = events.filter(({ date }) => new Date(date) >= today);\n  // const widthWindow = window.innerWidth;\n  // const { selectedLanguage } = useContext(StatusContext);\n  const initialEvents = 6;\n  const [eventsNumber, setEventsNumber] = useState(initialEvents);\n\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [noEvents, setNoEvents] = useState(false);\n  // const [currentWeek, setCurrentWeek] = useState([]);\n  const [filterLanguage, setfilterLanguage] = useState([]);\n  const [filterCategory, setfilterCategory] = useState([]);\n  const [activeEventsArr, setActiveEventsArr] = useState([]);\n  const [arr, setArr] = useState([]);\n\n  console.log(\"currentWeek\", currentWeek)\n  useEffect(() => {\n    const storedDate = getFromStorage('selectedDate');\n    if (storedDate) {\n      setSelectedDate(new Date(storedDate));\n    }\n  }, [getFromStorage('selectedDate')]);\n\n  // if (!getFromStorage('selectedDate')) {\n  //   saveToStorage(new Date());\n  // }\n\n  // const [selectedDate, setSelectedDate] = useState(\n  //   getFromStorage('selectedDate')\n  //     ? new Date(getFromStorage('selectedDate'))\n  //     : new Date()\n  // );\n\n  // const [currentWeek, setCurrentWeek] = useState([]);\n  // console.log(currentWeek, \"currentWeek\");\n  // useEffect(() => {\n  //   const storedCurrentWeek = getFromStorage('currentWeek');\n  //   const formattedStoredWeek = storedCurrentWeek\n  //     ? storedCurrentWeek.map(dateStr => new Date(dateStr).toLocaleDateString())\n  //     : [];\n\n  //   if (JSON.stringify(formattedStoredWeek) !== JSON.stringify(currentWeek)) {\n  //     setCurrentWeek(formattedStoredWeek);\n  //   }\n  // }, [getFromStorage('currentWeek')]);\n\n  useEffect(() => {\n    if (selectedDate) {\n      const newFilteredEvents = activeEvents.filter(\n        event =>\n          new Date(event.date).toLocaleDateString() ===\n          selectedDate.toLocaleDateString()\n      );\n      setFilteredEvents(newFilteredEvents);\n\n      setNoEvents(newFilteredEvents.length === 0);\n    } else {\n      setFilteredEvents(events);\n      setNoEvents(false);\n    }\n  }, [selectedDate, activeEvents, events]);\n\n  useEffect(() => {\n    const getLang = getFromStorage('filterSelectedLanguage');\n    const filteredEventsByLang = activeEvents.filter(event => {\n      return (\n        event.language === getLang ||\n        event.language_secondary === getLang ||\n        event.language_third === getLang\n      );\n    });\n    // console.log(filteredEventsByLang);\n\n    setfilterLanguage(filteredEventsByLang);\n\n    const getCategoty = getFromStorage('filterSelectedCategory');\n    const filteredEventsByCategoty = events.filter(event => {\n      return (\n        event.category === getCategoty ||\n        event.category_second === getCategoty ||\n        event.category_third === getCategoty\n      );\n    });\n    // console.log(filteredEventsByCategoty);\n    setfilterCategory(filteredEventsByCategoty);\n  }, [\n    activeEvents,\n    events,\n    getFromStorage('filterSelectedCategory'),\n    getFromStorage('filterSelectedLanguage'),\n  ]);\n\n  const handleMouseEnter = i => {\n    setHovered(i);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  const handleEventsNumber = () => {\n    setEventsNumber(eventsNumber + 6);\n  };\n\n  const handleCleanFilter = () => {\n    removeItem('selectedDate');\n    removeItem('filterSelectedLanguage');\n    removeItem('filterSelectedCategory');\n\n    setSelectedDate(null);\n  };\n\n  useEffect(() => {\n    let array = [];\n    activeEvents.map(it => {\n      events.map(item => { \n        if (it.eventId === item.article_event && it.status === 'active') {\n          let data = {};\n          (data._id = it._id),\n            (data.article_event = item.article_event),\n            (data.language = it.language),\n            (data.language_secondary = it.language_secondary),\n            (data.language_third = it.language_third),\n            (data.price = it.price),\n            (data.date = it.date),\n            (data.time = it.time),\n            (data.location = it.location),\n            (data.address = it.address),\n            (data.seats = it.seats),\n            (data.booking = it.booking),\n            (data.vacancies = it.vacancies),\n            (data.image = item.image),\n            (data.image_1 = item.image_1),\n            (data.image_2 = item.image_2),\n            (data.rating = item.rating),\n            (data.duration = item.duration),\n            (data.category = item.category),\n            (data.specialistId = item.specialistId),\n            (data.description = item.description),\n            (data.name = item.name),\n            (data.status = item.status),\n            array.push(data);\n        }\n      });\n    });\n    setActiveEventsArr(array);\n  }, [activeEvents, events]);\n  console.log(\"activeEventsArr\", activeEventsArr);\n\n  return (\n    <>\n      <CleanFilterBtn onClick={handleCleanFilter}>\n        Очистити фільтри\n      </CleanFilterBtn>\n      <List>\n        {activeEventsArr\n          .sort((a, b) => new Date(a.date) - new Date(b.date))\n          .slice(0, eventsNumber)\n          .map((event, i) => {\n            let newFilteredWeek = [];\n            activeEventsArr.map(it => {currentWeek.map(item => {if((new Date(it.date) - new Date(item)) === 0 ){newFilteredWeek.push(it)}})});\n\n            // const dd = activeEvents.map(it => console.log(it.date));\n            // const newFilteredWeek = activeEvents.filter(week =>\n            //   currentWeek.filter(\n            //     day => (new Date(week.date) === new Date(day))\n                // new Date(week.date).toLocaleDateString() === day\n            //   )\n            // );\n            console.log(\"newFilteredWeek\", newFilteredWeek);\n            // console.log(\"activeEventsArr\", activeEventsArr);\n\n            const matchingActiveEvents = activeEvents.filter(\n              activeEvent => activeEvent.eventId === event.article_event\n            );\n\n            const filtredActiveEvents = filteredEvents.filter(\n              activeEvent => activeEvent.eventId === event.article_event\n            );\n\n            const filtredActiveByLang = activeEvents.filter(\n              activeEvent => activeEvent.eventId === event.article_event\n            );\n\n            let shouldDisplay;\n\n            if (selectedDate) {\n              // shouldDisplay = filtredActiveEvents?.length > 0;\n              shouldDisplay = newFilteredWeek.length > 0;\n            } else {\n              // shouldDisplay = matchingActiveEvents?.length > 0;\n              shouldDisplay = newFilteredWeek.some(\n                filteredEvent => filteredEvent.eventId === event.article_event\n              );\n            }\n\n            if (shouldDisplay) {\n              return (\n                <Event key={i}>\n                  <EventNavLink\n                    onMouseEnter={() => handleMouseEnter(i)}\n                    onMouseLeave={handleMouseLeave}\n                  >\n                    <EventImages\n                      src={\n                        event.image\n                          ? BASE_URL_IMG +\n                            'events/' +\n                            event.image.split('/')[\n                              event.image.split('/').length - 1\n                            ]\n                          : defaultImg\n                      }\n                      alt={event.title}\n                      loading=\"lazy\"\n                    />\n\n                    {isHovered === i && (\n                      <EventDetailBox\n                        $ishovered={isHovered === i ? 'flex' : 'none'}\n                      >\n                        <EventDetailTitle>{event.name}</EventDetailTitle>\n\n                        <DetailsBox>\n                          <EventDetailDate>\n                            <EventDetailDateLi>\n                              <EventDetailDateText>\n                                {t('Дата')}\n                              </EventDetailDateText>\n                            </EventDetailDateLi>\n                            <EventDetailDateLi>\n                              {/* {matchingActiveEvents.map((ev, idx) => ( */}\n                              <EventDetailDateText2>\n                                {new Date(event.date).toLocaleDateString()}\n                              </EventDetailDateText2>\n                              {/* // ))} */}\n                            </EventDetailDateLi>\n                          </EventDetailDate>\n\n                          <ul>\n                            <li>\n                              <EventDetailDateText>\n                                {t('Час')}\n                              </EventDetailDateText>\n                            </li>\n                            <li>\n                              {/* {matchingActiveEvents.map((ev, idx) => ( */}\n                              <EventDetailDateText2>\n                                {event.time}\n                              </EventDetailDateText2>\n                              {/* ))} */}\n                            </li>\n                          </ul>\n                        </DetailsBox>\n\n                        <DetailsBoxDiscr>\n                          {event.description.length > 50\n                            ? event.description.slice(0, 50) + ' ...'\n                            : event.description}\n                        </DetailsBoxDiscr>\n\n                        <BtnLink to={`/events/${event.article_event}`}>\n                          <span>{t('Детальніше')}</span>\n                        </BtnLink>\n                      </EventDetailBox>\n                    )}\n                  </EventNavLink>\n                </Event>\n              );\n            }\n          })}\n        {noEvents && (\n          <NoEvents>\n            На дату {new Date(selectedDate).toLocaleDateString()} подій немає\n          </NoEvents>\n        )}\n      </List>\n      {eventsNumber < activeEventsArr.length && (\n        <BtnLightEvents onClick={handleEventsNumber}>\n          <span> {t('Показати більше')} </span>\n        </BtnLightEvents>\n      )}\n    </>\n  );\n};\n\nEventsList.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  currentWeek: PropTypes.any,\n  setCurrentWeek: PropTypes.any,\n  activeEvents: PropTypes.arrayOf(\n    PropTypes.shape({\n      // _id: PropTypes.string.isRequired,\n      // date: PropTypes.string.isRequired,\n      // time: PropTypes.string.isRequired,\n      // duration: PropTypes.string.isRequired,\n      // location: PropTypes.string.isRequired,\n      // title: PropTypes.string.isRequired,\n      // description: PropTypes.string,\n      // language: PropTypes.string,\n      // image: PropTypes.string,\n    })\n  ),\n};\n","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 35,\n    viewBox: \"0 0 34 35\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33 13.8333V8.33333C33 6.30829 31.2092 4.66667 29 4.66667H5C2.79086 4.66667 1 6.30829 1 8.33333V13.8333M33 13.8333V30.3333C33 32.3584 31.2092 34 29 34H5C2.79086 34 1 32.3584 1 30.3333V13.8333M33 13.8333H1M9 1V8.33333M25 1V8.33333\",\n    stroke: \"black\",\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.57893 17.5H5.21051C4.74543 17.5 4.36841 17.7931 4.36841 18.1548V20.7738C4.36841 21.1354 4.74543 21.4286 5.21051 21.4286H8.57893C9.04402 21.4286 9.42104 21.1354 9.42104 20.7738V18.1548C9.42104 17.7931 9.04402 17.5 8.57893 17.5Z\",\n    fill: \"black\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.6842 17.5H15.3157C14.8507 17.5 14.4736 17.7931 14.4736 18.1548V20.7738C14.4736 21.1354 14.8507 21.4286 15.3157 21.4286H18.6842C19.1492 21.4286 19.5263 21.1354 19.5263 20.7738V18.1548C19.5263 17.7931 19.1492 17.5 18.6842 17.5Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7894 17.5H25.421C24.9559 17.5 24.5789 17.7931 24.5789 18.1548V20.7738C24.5789 21.1354 24.9559 21.4286 25.421 21.4286H28.7894C29.2545 21.4286 29.6315 21.1354 29.6315 20.7738V18.1548C29.6315 17.7931 29.2545 17.5 28.7894 17.5Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendar);\nexport default __webpack_public_path__ + \"static/media/calendar.ea90a6a0dd5286eaf9682676d2b33f4d.svg\";\nexport { ForwardRef as ReactComponent };","import { theme } from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\nimport { ReactComponent as calendar } from 'images/events/calendar.svg';\n\nexport const CalendarIcon = styled(calendar)`\ndisplay: none;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    display: block;\n    position: absolute;\n    left: -85px;\n    bottom: 0;\n  }\n`;\n\nexport const CalendarBox = styled.div`\n  /* display: flex;\n  justify-content: center; */\n`;\n\nexport const CalendarDaysBox = styled.div`\n  /* display: flex;\n  align-items: center;\n  justify-content: center; */\n`;\n\nexport const CalendarDayBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CalendarDayBoxSpan = styled.span`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 9px;\n  cursor: pointer;\n\n  &.highlighted {\n    background-color: black;\n    color: white;\n  }\n\n  &:not(:last-child) {\n    margin-right: 25px;\n\n    @media screen and (min-width: ${theme.breakpoints.desktop}) {\n      margin-right: 35px;\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n    line-height: 120%;\n  }\n`;\n\nexport const CalendarDaysBoxSpan = styled.span`\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%;\n\n  &:not(:last-child) {\n    margin-right: 21px;\n\n    @media screen and (min-width: ${theme.breakpoints.desktop}) {\n      margin-right: 30px;\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CalendarWeekDays = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const CalendarDays = styled.div`\n  /* display: grid;\n  grid-template-columns: repeat(7, 1fr); */\n`;\n\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n","import { useEffect, useState } from \"react\";\nimport {\n  format,\n  subMonths,\n  addMonths,\n  startOfWeek,\n  addDays,\n  isSameDay,\n  lastDayOfWeek,\n  getWeek,\n  addWeeks,\n  subWeeks,\n} from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\nimport { CalendarIcon } from \"./Calendar.styled\";\nimport { getFromStorage, saveToStorage } from \"services/localStorService\";\n\nconst Calendar = ({\n  showDetailsHandle,\n  activeEvents,\n  currentWeek,\n  setCurrentWeek,\n}) => {\n  const selectedDay = getFromStorage(\"selectedDate\");\n  const [currentMonth, setCurrentMonth] = useState(\n    selectedDay ? selectedDay : new Date()\n  );\n  const [currentWeekNumber, setCurrentWeekNumber] = useState(\n    getWeek(currentMonth)\n  );\n\n  console.log(getWeek(currentMonth));\n  const [selectedDate, setSelectedDate] = useState(\n    selectedDay ? selectedDay : new Date()\n  );\n\n  const changeMonthHandle = (btnType) => {\n    if (btnType === \"prev\") {\n      setCurrentMonth(subMonths(currentMonth, 1));\n    }\n    if (btnType === \"next\") {\n      setCurrentMonth(addMonths(currentMonth, 1));\n    }\n  };\n\n  const changeWeekHandle = (btnType) => {\n    if (btnType === \"prev\") {\n      setCurrentMonth(subWeeks(currentMonth, 1));\n      setCurrentWeekNumber(getWeek(subWeeks(currentMonth, 1)));\n      getCurrentWeekDates(subWeeks(currentMonth, 1));\n    }\n    if (btnType === \"next\") {\n      setCurrentMonth(addWeeks(currentMonth, 1));\n      setCurrentWeekNumber(getWeek(addWeeks(currentMonth, 1)));\n      getCurrentWeekDates(addWeeks(currentMonth, 1));\n    }\n  };\n\n  const onDateClickHandle = (day, dayStr) => {\n    setSelectedDate(day);\n    showDetailsHandle(dayStr);\n    saveToStorage(\"selectedDate\", day);\n  };\n\n  const getCurrentWeekDates = (weekNumber) => {\n    const weekDates = [];\n    let startWeek = startOfWeek(weekNumber, { weekStartsOn: 1 });\n    for (let i = 0; i < 7; i++) {\n      weekDates.push(format(addDays(startWeek, i), \"ccc dd MMM yy\"));\n    }\n    saveToStorage(\"currentWeek\", weekDates);\n    setCurrentWeek(weekDates);\n  };\n  useEffect(() => getCurrentWeekDates(currentMonth), []);\n\n  const renderHeader = () => {\n    const dateFormat = \"MMMMMMMMM yyyy\";\n    // console.log(\"selected day\", selectedDate);\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-center\">\n          <span>{format(currentMonth, dateFormat)}</span>\n        </div>\n      </div>\n    );\n  };\n\n  const renderDays = () => {\n    const dateFormat = \"EEE\";\n    const days = [];\n    let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  };\n\n  const renderCells = () => {\n    const startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    const endDate = lastDayOfWeek(currentMonth, { weekStartsOn: 1 });\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell `}\n            key={day}\n            onClick={() => {\n              const dayStr = format(cloneDay, \"ccc dd MMM yy\");\n              onDateClickHandle(cloneDay, dayStr);\n            }}\n          >\n            <span\n              // className=\"number\"\n              className={`cell number ${\n                isSameDay(day, new Date())\n                  ? \"today\"\n                  : isSameDay(day, selectedDay)\n                  ? \"selected\"\n                  : \"\"\n              }`}\n            >\n              {formattedDate}\n            </span>\n          </div>\n        );\n        day = addDays(day, 1);\n      }\n\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  };\n\n  const renderFooter = () => {\n    return (\n      // header footer row flex-middle\n      <div className=\"footer\">\n        {/* <div className='footer-box'> */}\n        {/* col col-start */}\n        <div className=\"btn-prev\" onClick={() => changeWeekHandle(\"prev\")}>\n          {/* <div className=\"icon\" onClick={() => changeWeekHandle('prev')}> */}\n          <MdKeyboardArrowLeft size={30} />\n        </div>\n        {/* col col-end */}\n        <div className=\"btn-next\" onClick={() => changeWeekHandle(\"next\")}>\n          <MdKeyboardArrowRight size={30} />\n        </div>\n        {/* </div> */}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"calendar-box\">\n      <div className=\"calendar\">\n        <CalendarIcon />\n\n        {renderHeader()}\n        {renderDays()}\n        {renderCells()}\n        {renderFooter()}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n\nCalendar.propTypes = {\n  showDetailsHandle: PropTypes.any,\n  activeEvents: PropTypes.arrayOf(PropTypes.shape({})),\n  currentWeek: PropTypes.any,\n  setCurrentWeek: PropTypes.any,\n};\n","import { css } from '@emotion/react';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { MdKeyboardArrowRight } from 'react-icons/md';\nimport styled from 'styled-components';\n\nexport const FiltersBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n\nexport const FiltersBtn = styled.button`\n  display: flex;\n  align-items: center;\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%;\n  text-transform: capitalize;\n  background-color: transparent;\n  border-color: transparent;\n  cursor: pointer;\n  /* @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    display: none;\n  } */\n`;\n\nexport const ArrowIcon = styled(MdKeyboardArrowRight)`\n  width: 30px;\n  height: 30px;\n  transform: rotate(90deg);\n`;\n\nexport const ArrowIconUp = styled(MdKeyboardArrowRight)`\n  width: 30px;\n  height: 30px;\n\n  transform: rotate(-90deg);\n`;\n\nexport const FiltersMenu = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  left: -15px;\n  z-index: 1;\n  background-color: ${theme.colors.fon};\n  width: 215px;\n  padding: 10px;\n  border-radius: 20px;\n`;\n\nexport const FiltersBtnMenu = styled.button`\n  display: flex;\n  align-items: center;\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%;\n  text-transform: capitalize;\n  background-color: transparent;\n  border-color: transparent;\n  cursor: pointer;\n`;\n\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n// export const FiltersBox = styled.div``;\n","import PropTypes from 'prop-types';\nimport { useContext, useEffect, useState } from 'react';\nimport {\n  ArrowIcon,\n  ArrowIconUp,\n  FiltersBox,\n  FiltersBtn,\n  FiltersBtnMenu,\n  FiltersMenu,\n} from './Filters.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport { fetchData } from 'services/APIservice';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { saveToStorage } from 'services/localStorService';\n\nexport const Filters = ({ events, activeEvents }) => {\n  const [isShown, setIsShown] = useState(false);\n  const [isOpen, setIsOpen] = useState({});\n  const { selectedLanguage } = useContext(StatusContext);\n  const [categories, setCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const toggleFilters = () => {\n    setIsShown(!isShown);\n  };\n\n  const toggleVisibility = idx => {\n    setIsOpen(prevState => ({\n      ...prevState,\n      [idx]: !prevState[idx],\n    }));\n  };\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/categories`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              categoryId: it.categoryId,\n              title: it.title,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setCategories(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  const handleLanguageSelect = language => {\n    saveToStorage('filterSelectedLanguage', language);\n  };\n\n  const handleCategorySelect = category => {\n    saveToStorage('filterSelectedCategory', category);\n  };\n\n  return (\n    <FiltersBox>\n      <div style={{ position: 'relative' }}>\n        <FiltersBtn onClick={toggleFilters}>\n          Фільтрувати за {isShown ? <ArrowIconUp /> : <ArrowIcon />}\n        </FiltersBtn>\n\n        {isShown && (\n          <FiltersMenu>\n            <div>\n              <FiltersBtnMenu onClick={() => toggleVisibility(1)}>\n                Мова {isOpen[1] ? <ArrowIconUp /> : <ArrowIcon />}\n              </FiltersBtnMenu>\n\n              {isOpen[1] && (\n                <div>\n                  <ul>\n                    <li onClick={() => handleLanguageSelect('Fr')}>\n                      <p>Французька</p>\n                    </li>\n                    <li onClick={() => handleLanguageSelect('En')}>\n                      <p>Англійська</p>\n                    </li>\n                    <li onClick={() => handleLanguageSelect('Uk')}>\n                      <p>Українська</p>\n                    </li>\n                    <li onClick={() => handleLanguageSelect('Ru')}>\n                      <p>Російська</p>\n                    </li>\n                  </ul>\n                </div>\n              )}\n            </div>\n\n            <div>\n              <FiltersBtnMenu onClick={() => toggleVisibility(2)}>\n                Категорія заходу {isOpen[2] ? <ArrowIconUp /> : <ArrowIcon />}\n              </FiltersBtnMenu>\n\n              {isOpen[2] && (\n                <div>\n                  <ul>\n                    {categories.map(category => (\n                      <li\n                        key={category._id}\n                        onClick={() => handleCategorySelect(category.categoryId)}\n                      >\n                        <p>{category.title}</p>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n\n            <div>\n              <FiltersBtnMenu>\n                Місце <ArrowIcon />\n              </FiltersBtnMenu>\n            </div>\n\n            <div>\n              <FiltersBtnMenu onClick={() => toggleVisibility(4)}>\n                Вільні місця {isOpen[4] ? <ArrowIconUp /> : <ArrowIcon />}\n              </FiltersBtnMenu>\n\n              {isOpen[4] && (\n                <div>\n                  <ul>\n                    <li>\n                      <p>Більше 5</p>\n                    </li>\n                    <li>\n                      <p>Більше 10</p>\n                    </li>\n                    <li>\n                      <p>Менше 5</p>\n                    </li>\n                    <li>\n                      <p>Менше 10</p>\n                    </li>\n                  </ul>\n                </div>\n              )}\n            </div>\n          </FiltersMenu>\n        )}\n      </div>\n    </FiltersBox>\n  );\n};\n\nFilters.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  activeEvents: PropTypes.arrayOf(PropTypes.shape({})),\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventsList } from './EventsList/EventList';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { EventsSection } from './Events.styled';\nimport { Container, Title } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport Calendar from './Calendar/calendar';\nimport { Filters } from './Filters/Filters';\n\nexport const Events = () => {\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [data, setData] = useState(null);\n  const [currentWeek, setCurrentWeek] = useState([]);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n  const [activeEvents, setActiveEvents] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_event: it.article_event,\n              name: it.name,\n              description: it.description,\n              image: it.image,\n              category: it.category,\n              category_second: it.category_second,\n              category_third: it.category_third,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_eventID: it.article_eventID,\n              eventId: it.eventId,\n              date: it.date,\n              time: it.time,\n              language: it.language,\n              language_secondary: it.language_secondary,\n              language_third: it.language_third,\n              status: it.status,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setActiveEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  const showDetailsHandle = dayStr => {\n    setData(dayStr);\n    setShowDetails(true);\n  };\n\n  return (\n    <EventsSection>\n      <Container>\n        <Title>{t('Events calendar')}</Title>\n        <Calendar\n          showDetailsHandle={showDetailsHandle}\n          activeEvents={activeEvents}\n          currentWeek={currentWeek}\n          setCurrentWeek={setCurrentWeek}\n        />\n        <Filters events={events} activeEvents={activeEvents} />\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {events.length > 0 && !error && (\n          <EventsList events={events} activeEvents={activeEvents}           currentWeek={currentWeek}\n          setCurrentWeek={setCurrentWeek}/>\n        )}\n\n        {/* <Heading>{t('Archive of past events')}</Heading> */}\n        {/* {isLoading ? onLoading() : onLoaded()} */}\n        {/* {error && onFetchError('Whoops, something went wrong')} */}\n        {/* {events.length > 0 && !error && <ArchiveEventsList events={events} />} */}\n      </Container>\n    </EventsSection>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Events } from 'components/Events/Events';\n\nconst EventsPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Events calendar\" description=\"Events calendar\" />\n      <Events />\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["EventsSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","Headline","_templateObject2","BtnLight","BtnAccent","BtnLink","NavLink","_templateObject3","fadeInUp","keyframes","List","Event","EventNavLink","_templateObject4","EventImages","_templateObject5","EventDetailBox","_templateObject6","props","$ishovered","EventDetailTitle","_templateObject7","DetailsBox","_templateObject8","EventDetailDate","_templateObject9","EventDetailDateLi","_templateObject10","EventDetailDateText","_templateObject11","EventDetailDateText2","_templateObject12","DetailsBoxDiscr","_templateObject13","NoEvents","_templateObject14","CleanFilterBtn","_templateObject15","BtnLightEvents","_templateObject16","EventsList","_ref","events","activeEvents","currentWeek","setCurrentWeek","t","useTranslation","isHovered","setHovered","useState","eventsNumber","setEventsNumber","selectedDate","setSelectedDate","filteredEvents","setFilteredEvents","noEvents","setNoEvents","filterLanguage","setfilterLanguage","filterCategory","setfilterCategory","activeEventsArr","setActiveEventsArr","arr","setArr","console","log","useEffect","storedDate","getFromStorage","Date","newFilteredEvents","filter","event","date","toLocaleDateString","length","getLang","filteredEventsByLang","language","language_secondary","language_third","getCategoty","filteredEventsByCategoty","category","category_second","category_third","handleMouseLeave","array","map","it","item","eventId","article_event","status","data","_id","price","time","location","address","seats","booking","vacancies","image","image_1","image_2","rating","duration","specialistId","description","name","push","_jsxs","_Fragment","children","_jsx","onClick","handleCleanFilter","removeItem","sort","a","b","slice","i","newFilteredWeek","activeEvent","shouldDisplay","some","filteredEvent","onMouseEnter","handleMouseEnter","onMouseLeave","src","BASE_URL_IMG","split","defaultImg","alt","title","loading","to","concat","handleEventsNumber","_path","_path2","_path3","_path4","_extends","Object","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgCalendar","svgRef","titleId","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeLinecap","ForwardRef","CalendarIcon","calendar","showDetailsHandle","selectedDay","currentMonth","setCurrentMonth","currentWeekNumber","setCurrentWeekNumber","getWeek","changeWeekHandle","btnType","subWeeks","getCurrentWeekDates","addWeeks","onDateClickHandle","day","dayStr","saveToStorage","weekNumber","weekDates","startWeek","startOfWeek","weekStartsOn","format","addDays","className","renderDays","days","startDate","renderCells","endDate","lastDayOfWeek","rows","formattedDate","cloneDay","isSameDay","MdKeyboardArrowLeft","size","MdKeyboardArrowRight","FiltersBox","FiltersBtn","ArrowIcon","ArrowIconUp","FiltersMenu","FiltersBtnMenu","Filters","isShown","setIsShown","isOpen","setIsOpen","selectedLanguage","useContext","StatusContext","categories","setCategories","isLoading","setIsLoading","error","setError","toggleVisibility","idx","prevState","fetchData","onFetchError","langData","categoryId","handleLanguageSelect","style","position","toggleFilters","handleCategorySelect","Events","setEvents","showDetails","setShowDetails","setData","setActiveEvents","article_eventID","Container","Title","Calendar","onLoading","onLoaded","EventsPage","window","scrollTo","top","left","behavior","SEO","Helmet","content"],"sourceRoot":""}