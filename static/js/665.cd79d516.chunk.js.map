{"version":3,"file":"static/js/665.cd79d516.chunk.js","mappings":"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","sources":["components/Events/Events.styled.js","components/baseStyles/Button.styled.js","components/Events/EventsList/EventList.styled.js","components/Events/EventsList/EventList.jsx","images/events/calendar.svg","components/Events/Calendar/Calendar.styled.js","components/Events/Calendar/calendar.js","components/Events/Events.jsx","pages/EventsPage.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Headline } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding: 50px 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nexport const Heading = styled(Headline)`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 50px;\n    margin-bottom: 40px;\n    font-size: 42px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px 30px;\n`;\n\nexport const Event = styled.li``;\n\nexport const EventNavLink = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const EventImages = styled.img`\n  width: 350px;\n  height: 300px;\n  border-radius: 40px;\n  /* transition: ${theme.transition}; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 378px;\n    height: 393px;\n  }\n\n  /* &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  } */\n`;\n\nexport const EventDetailBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  border-radius: 40px;\n  background: #fcf9f2;\n  padding: 25px 40px;\n\n  animation: ${fadeInUp} 0.3s ease;\n  display: ${props => (props.isHovered ? 'flex' : 'none')};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 300px;\n    padding: 25px 45px;\n  }\n`;\n\nexport const EventDetailTitle = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n`;\n\nexport const EventDetailDate = styled.ul`\n  margin-right: 45px;\n`;\n\nexport const EventDetailDateLi = styled.li``;\n\nexport const EventDetailDateText = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px;\n  text-transform: uppercase;\n  margin-bottom: 7px;\n`;\n\nexport const EventDetailDateText2 = styled.p`\n  color: ${theme.colors.grey1};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px;\n  text-transform: uppercase;\n`;\n\nexport const DetailsBoxDiscr = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n\n  margin-top: 20px;\n  margin-bottom: 25px;\n`;\n\nexport const NoEvents = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const CleanFilterBtn = styled.button`\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%;\n  background-color: transparent;\n  border-color: transparent;\n  border-bottom: 1px solid ${theme.colors.grey2};\n  cursor: pointer;\n  \n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n`;\n\n// export const EventDetailTitle = styled.p``\n// export const EventDetailTitle = styled.p``\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  CleanFilterBtn,\n  DetailsBox,\n  DetailsBoxDiscr,\n  Event,\n  EventDetailBox,\n  EventDetailDate,\n  EventDetailDateLi,\n  EventDetailDateText,\n  EventDetailDateText2,\n  EventDetailTitle,\n  EventImages,\n  EventNavLink,\n  List,\n  NoEvents,\n} from './EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\nimport { useEffect, useState } from 'react';\nimport { BtnLight, BtnLink } from 'components/baseStyles/Button.styled';\nimport { getFromStorage, removeItem } from 'services/localStorService';\n\nexport const EventsList = ({ events, activeEvents }) => {\n  const { t } = useTranslation();\n  // const [activeEvents, setActiveEvents] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const [isHovered, setHovered] = useState(null);\n  // const today = new Date();\n  // const activeEvents = events.filter(({ date }) => new Date(date) >= today);\n  // const widthWindow = window.innerWidth;\n  // const { selectedLanguage } = useContext(StatusContext);\n  const initialEvents = 6;\n  const [eventsNumber, setEventsNumber] = useState(initialEvents);\n\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [noEvents, setNoEvents] = useState(false);\n\n  useEffect(() => {\n    const storedDate = getFromStorage('selectedDate');\n    if (storedDate) {\n      setSelectedDate(new Date(storedDate));\n    }\n  }, [getFromStorage('selectedDate')]);\n\n  useEffect(() => {\n    if (selectedDate) {\n      const newFilteredEvents = activeEvents.filter(\n        event =>\n          new Date(event.date).toLocaleDateString() ===\n          selectedDate.toLocaleDateString()\n      );\n\n      setFilteredEvents(newFilteredEvents);\n      setNoEvents(newFilteredEvents.length === 0);\n    } else {\n      setFilteredEvents(events);\n      setNoEvents(false);\n    }\n  }, [selectedDate, activeEvents, events]);\n\n  const handleMouseEnter = eventId => {\n    setHovered(eventId);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  const handleEventsNumber = () => {\n    setEventsNumber(eventsNumber + 6);\n  };\n\n  const handleCleanFilter = () => {\n    removeItem('selectedDate');\n    setSelectedDate(null);\n  };\n\n  return (\n    <>\n      <CleanFilterBtn onClick={handleCleanFilter}>\n        Очистити фільтри\n      </CleanFilterBtn>\n      <List>\n        {events.slice(0, eventsNumber).map(event => {\n          const matchingActiveEvents = activeEvents.filter(\n            activeEvent => activeEvent.eventId === event.article_event\n          );\n\n          const filtredActiveEvents = filteredEvents.filter(\n            activeEvent => activeEvent.eventId === event.article_event\n          );\n          let shouldDisplay;\n\n          if (selectedDate) {\n            shouldDisplay = filtredActiveEvents.length > 0;\n          } else {\n            shouldDisplay = matchingActiveEvents.length > 0;\n          }\n\n          if (shouldDisplay) {\n            return (\n              // data-aos=\"zoom-in-up\" data-aos-delay=\"200\"\n              <Event key={event._id}>\n                <EventNavLink\n                  onMouseEnter={() => handleMouseEnter(event._id)}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  <EventImages\n                    src={\n                      event.image\n                        ? BASE_URL_IMG +\n                          'events/' +\n                          event.image.split('/')[\n                            event.image.split('/').length - 1\n                          ]\n                        : defaultImg\n                    }\n                    alt={event.title}\n                    loading=\"lazy\"\n                  />\n\n                  {isHovered === event._id && (\n                    <EventDetailBox isHovered={isHovered === event._id}>\n                      <EventDetailTitle>{event.name}</EventDetailTitle>\n\n                      <DetailsBox>\n                        <EventDetailDate>\n                          <EventDetailDateLi>\n                            <EventDetailDateText>\n                              {t('Дата')}\n                            </EventDetailDateText>\n                          </EventDetailDateLi>\n                          <EventDetailDateLi>\n                            {matchingActiveEvents.map((ev, idx) => (\n                              <EventDetailDateText2 key={idx}>\n                                {new Date(ev.date).toLocaleDateString()}\n                              </EventDetailDateText2>\n                            ))}\n                          </EventDetailDateLi>\n                        </EventDetailDate>\n\n                        <ul>\n                          <li>\n                            <EventDetailDateText>\n                              {t('Час')}\n                            </EventDetailDateText>\n                          </li>\n                          <li>\n                            {matchingActiveEvents.map((ev, idx) => (\n                              <EventDetailDateText2 key={idx}>\n                                {ev.time}\n                              </EventDetailDateText2>\n                            ))}\n                          </li>\n                        </ul>\n                      </DetailsBox>\n\n                      <DetailsBoxDiscr>\n                        {event.description.length > 50\n                          ? event.description.slice(0, 50) + ' ...'\n                          : event.description}\n                      </DetailsBoxDiscr>\n\n                      <BtnLink to={`/events/${event.article_event}`}>\n                        <span>{t('Детальніше')}</span>\n                      </BtnLink>\n                    </EventDetailBox>\n                  )}\n                </EventNavLink>\n              </Event>\n            );\n          }\n        })}\n        {noEvents && (\n          <NoEvents>\n            На дату {new Date(selectedDate).toLocaleDateString()} подій немає\n          </NoEvents>\n        )}\n        {eventsNumber < events.length && (\n          <BtnLight onClick={handleEventsNumber}>\n            <span> {t('Показати більше')} </span>\n          </BtnLight>\n        )}\n      </List>\n    </>\n  );\n};\n\nEventsList.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      language: PropTypes.string,\n      image: PropTypes.string,\n    })\n  ),\n  activeEvents: PropTypes.arrayOf(PropTypes.shape({})),\n};\n","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCalendar(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 35,\n    viewBox: \"0 0 34 35\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33 13.8333V8.33333C33 6.30829 31.2092 4.66667 29 4.66667H5C2.79086 4.66667 1 6.30829 1 8.33333V13.8333M33 13.8333V30.3333C33 32.3584 31.2092 34 29 34H5C2.79086 34 1 32.3584 1 30.3333V13.8333M33 13.8333H1M9 1V8.33333M25 1V8.33333\",\n    stroke: \"black\",\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.57893 17.5H5.21051C4.74543 17.5 4.36841 17.7931 4.36841 18.1548V20.7738C4.36841 21.1354 4.74543 21.4286 5.21051 21.4286H8.57893C9.04402 21.4286 9.42104 21.1354 9.42104 20.7738V18.1548C9.42104 17.7931 9.04402 17.5 8.57893 17.5Z\",\n    fill: \"black\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.6842 17.5H15.3157C14.8507 17.5 14.4736 17.7931 14.4736 18.1548V20.7738C14.4736 21.1354 14.8507 21.4286 15.3157 21.4286H18.6842C19.1492 21.4286 19.5263 21.1354 19.5263 20.7738V18.1548C19.5263 17.7931 19.1492 17.5 18.6842 17.5Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7894 17.5H25.421C24.9559 17.5 24.5789 17.7931 24.5789 18.1548V20.7738C24.5789 21.1354 24.9559 21.4286 25.421 21.4286H28.7894C29.2545 21.4286 29.6315 21.1354 29.6315 20.7738V18.1548C29.6315 17.7931 29.2545 17.5 28.7894 17.5Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendar);\nexport default __webpack_public_path__ + \"static/media/calendar.ea90a6a0dd5286eaf9682676d2b33f4d.svg\";\nexport { ForwardRef as ReactComponent };","import { theme } from 'components/baseStyles/Variables.styled';\nimport styled from 'styled-components';\nimport { ReactComponent as calendar } from 'images/events/calendar.svg';\n\nexport const CalendarIcon = styled(calendar)`\n  position: absolute;\n  left: -85px;\n  bottom: 0;\n`;\n\nexport const CalendarBox = styled.div`\n  /* display: flex;\n  justify-content: center; */\n`;\n\nexport const CalendarDaysBox = styled.div`\n  /* display: flex;\n  align-items: center;\n  justify-content: center; */\n`;\n\nexport const CalendarDayBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CalendarDayBoxSpan = styled.span`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 9px;\n  cursor: pointer;\n\n  &.highlighted {\n    background-color: black;\n    color: white;\n  }\n\n  &:not(:last-child) {\n    margin-right: 25px;\n\n    @media screen and (min-width: ${theme.breakpoints.desktop}) {\n      margin-right: 35px;\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n    line-height: 120%;\n  }\n`;\n\nexport const CalendarDaysBoxSpan = styled.span`\n  color: ${theme.colors.grey2};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%;\n\n  &:not(:last-child) {\n    margin-right: 21px;\n\n    @media screen and (min-width: ${theme.breakpoints.desktop}) {\n      margin-right: 30px;\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CalendarWeekDays = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const CalendarDays = styled.div`\n  /* display: grid;\n  grid-template-columns: repeat(7, 1fr); */\n`;\n\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n// export const CalendarBox = styled.div``;\n","import { useState } from 'react';\nimport {\n  format,\n  subMonths,\n  addMonths,\n  startOfWeek,\n  addDays,\n  isSameDay,\n  lastDayOfWeek,\n  getWeek,\n  addWeeks,\n  subWeeks,\n} from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\nimport { CalendarIcon } from './Calendar.styled';\nimport { getFromStorage, saveToStorage } from 'services/localStorService';\n\nconst Calendar = ({ showDetailsHandle, activeEvents }) => {\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [currentWeek, setCurrentWeek] = useState(getWeek(currentMonth));\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const changeMonthHandle = btnType => {\n    if (btnType === 'prev') {\n      setCurrentMonth(subMonths(currentMonth, 1));\n    }\n    if (btnType === 'next') {\n      setCurrentMonth(addMonths(currentMonth, 1));\n    }\n  };\n  const selectedDay = getFromStorage('selectedDate');\n\n  const changeWeekHandle = btnType => {\n    //console.log(\"current week\", currentWeek);\n    if (btnType === 'prev') {\n      //console.log(subWeeks(currentMonth, 1));\n      setCurrentMonth(subWeeks(currentMonth, 1));\n      setCurrentWeek(getWeek(subWeeks(currentMonth, 1)));\n    }\n    if (btnType === 'next') {\n      //console.log(addWeeks(currentMonth, 1));\n      setCurrentMonth(addWeeks(currentMonth, 1));\n      setCurrentWeek(getWeek(addWeeks(currentMonth, 1)));\n    }\n  };\n\n  const onDateClickHandle = (day, dayStr) => {\n    setSelectedDate(day);\n    showDetailsHandle(dayStr);\n    saveToStorage('selectedDate', day);\n  };\n\n  const renderHeader = () => {\n    const dateFormat = 'MMMMMMMMM yyyy';\n    // console.log(\"selected day\", selectedDate);\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-center\">\n          <span>{format(currentMonth, dateFormat)}</span>\n        </div>\n      </div>\n    );\n  };\n\n  const renderDays = () => {\n    const dateFormat = 'EEE';\n    const days = [];\n    let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  };\n\n  const renderCells = () => {\n    const startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    const endDate = lastDayOfWeek(currentMonth, { weekStartsOn: 1 });\n    const dateFormat = 'd';\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = '';\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell `}\n            key={day}\n            onClick={() => {\n              const dayStr = format(cloneDay, 'ccc dd MMM yy');\n              onDateClickHandle(cloneDay, dayStr);\n            }}\n          >\n            <span\n              // className=\"number\"\n              className={`cell number ${\n                isSameDay(day, new Date())\n                  ? 'today'\n                  : isSameDay(day, selectedDay)\n                  ? 'selected'\n                  : ''\n              }`}\n            >\n              {formattedDate}\n            </span>\n          </div>\n        );\n        day = addDays(day, 1);\n      }\n\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  };\n\n  const renderFooter = () => {\n    return (\n      // header footer row flex-middle\n      <div className=\"footer\">\n        {/* <div className='footer-box'> */}\n        {/* col col-start */}\n        <div className=\"btn-prev\" onClick={() => changeWeekHandle('prev')}>\n          {/* <div className=\"icon\" onClick={() => changeWeekHandle('prev')}> */}\n          <MdKeyboardArrowLeft size={30} />\n        </div>\n        {/* col col-end */}\n        <div className=\"btn-next\" onClick={() => changeWeekHandle('next')}>\n          <MdKeyboardArrowRight size={30} />\n        </div>\n        {/* </div> */}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"calendar-box\">\n      <div className=\"calendar\">\n        <CalendarIcon />\n\n        {renderHeader()}\n        {renderDays()}\n        {renderCells()}\n        {renderFooter()}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n/**\n * Header:\n * icon for switching to the previous month,\n * formatted date showing current month and year,\n * another icon for switching to next month\n * icons should also handle onClick events to change a month\n */\n// Calendar.propTypes = { showDetailsHandle: PropTypes.any };\nCalendar.propTypes = {\n  showDetailsHandle: PropTypes.any,\n  activeEvents: PropTypes.arrayOf(PropTypes.shape({})),\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventsList } from './EventsList/EventList';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { EventsSection } from './Events.styled';\nimport { Container, Title } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport Calendar from './Calendar/calendar';\n\nexport const Events = () => {\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [data, setData] = useState(null);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n  const [activeEvents, setActiveEvents] = useState([]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_event: it.article_event,\n              name: it.name,\n              description: it.description,\n              image: it.image,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_eventID: it.article_eventID,\n              eventId: it.eventId,\n              date: it.date,\n              time: it.time,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setActiveEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  const showDetailsHandle = dayStr => {\n    setData(dayStr);\n    setShowDetails(true);\n  };\n\n  return (\n    <EventsSection>\n      <Container>\n        <Title>{t('Events calendar')}</Title>\n        <Calendar\n          showDetailsHandle={showDetailsHandle}\n          activeEvents={activeEvents}\n        />\n        <br />\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {events.length > 0 && !error && (\n          <EventsList events={events} activeEvents={activeEvents} />\n        )}\n\n        {/* <Heading>{t('Archive of past events')}</Heading> */}\n        {/* {isLoading ? onLoading() : onLoaded()} */}\n        {/* {error && onFetchError('Whoops, something went wrong')} */}\n        {/* {events.length > 0 && !error && <ArchiveEventsList events={events} />} */}\n      </Container>\n    </EventsSection>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Events } from 'components/Events/Events';\n\nconst EventsPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Events calendar\" description=\"Events calendar\" />\n      <Events />\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["EventsSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","Headline","_templateObject2","BtnLight","BtnAccent","BtnLink","NavLink","_templateObject3","fadeInUp","keyframes","List","Event","EventNavLink","_templateObject4","EventImages","_templateObject5","EventDetailBox","_templateObject6","props","isHovered","EventDetailTitle","_templateObject7","DetailsBox","_templateObject8","EventDetailDate","_templateObject9","EventDetailDateLi","_templateObject10","EventDetailDateText","_templateObject11","EventDetailDateText2","_templateObject12","DetailsBoxDiscr","_templateObject13","NoEvents","_templateObject14","CleanFilterBtn","_templateObject15","EventsList","_ref","events","activeEvents","t","useTranslation","setHovered","useState","eventsNumber","setEventsNumber","selectedDate","setSelectedDate","filteredEvents","setFilteredEvents","noEvents","setNoEvents","useEffect","storedDate","getFromStorage","Date","newFilteredEvents","filter","event","date","toLocaleDateString","length","handleMouseLeave","_jsxs","_Fragment","children","_jsx","onClick","handleCleanFilter","removeItem","slice","map","matchingActiveEvents","activeEvent","eventId","article_event","filtredActiveEvents","shouldDisplay","onMouseEnter","handleMouseEnter","_id","onMouseLeave","src","image","BASE_URL_IMG","split","defaultImg","alt","title","loading","name","ev","idx","time","description","to","concat","handleEventsNumber","_path","_path2","_path3","_path4","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgCalendar","svgRef","titleId","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeLinecap","ForwardRef","CalendarIcon","calendar","showDetailsHandle","currentMonth","setCurrentMonth","currentWeek","setCurrentWeek","getWeek","selectedDay","changeWeekHandle","btnType","subWeeks","addWeeks","onDateClickHandle","day","dayStr","saveToStorage","className","format","renderDays","days","startDate","startOfWeek","weekStartsOn","push","addDays","renderCells","endDate","lastDayOfWeek","rows","formattedDate","cloneDay","isSameDay","MdKeyboardArrowLeft","size","MdKeyboardArrowRight","Events","setEvents","error","setError","isLoading","setIsLoading","showDetails","setShowDetails","data","setData","selectedLanguage","useContext","StatusContext","setActiveEvents","fetchData","onFetchError","langData","it","item","article_eventID","Container","Title","Calendar","onLoading","onLoaded","EventsPage","window","scrollTo","top","left","behavior","SEO","Helmet","content"],"sourceRoot":""}