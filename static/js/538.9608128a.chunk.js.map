{"version":3,"file":"static/js/538.9608128a.chunk.js","mappings":"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","sources":["components/Events/Events.styled.js","components/baseStyles/Button.styled.js","components/Events/EventsList/EventList.styled.js","components/Events/EventsList/EventList.jsx","components/Events/Calendar/calendar.js","components/Events/Calendar/details.js","components/Events/Events.jsx","pages/EventsPage.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Headline } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding: 50px 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nexport const Heading = styled(Headline)`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 50px;\n    margin-bottom: 40px;\n    font-size: 42px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\n\nexport const BtnLight = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 125px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  color: ${theme.colors.grey1};\n  text-transform: uppercase;\n\n  background-color: ${theme.colors.fon};\n  border: 1px solid ${theme.colors.grey1};\n  border-radius: 7px;\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 14px;\n    padding: 18px 33px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.white};\n    background-color: ${theme.colors.accent};\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnAccent = styled.button`\n  min-width: 220px;\n  padding: 13px 23px;\n  margin: 0 auto;\n\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  color: ${theme.colors.white};\n\n  border-radius: 7px;\n  background: ${theme.colors.accent};\n  border: 1px solid ${theme.colors.accent};\n\n  cursor: pointer;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.grey2};\n    background-color: transparent;\n    border: 1px solid ${theme.colors.grey2};\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 150%; /* 24px */\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${theme.colors.accent};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${theme.colors.accent};\n    border-left: 1px solid ${theme.colors.accent};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: -2px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 60%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px 30px;\n`;\n\nexport const Event = styled.li``;\n\nexport const EventNavLink = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const EventImages = styled.img`\n  width: 350px;\n  height: 300px;\n  border-radius: 40px;\n  /* transition: ${theme.transition}; */\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 378px;\n    height: 393px;\n  }\n\n  /* &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  } */\n`;\n\nexport const EventDetailBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  border-radius: 40px;\n  background: #fcf9f2;\n  padding: 25px 40px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 300px;\n    padding: 25px 45px;\n  }\n`;\n\nexport const EventDetailTitle = styled.p`\n  color: ${theme.colors.grey1};\n  font-family: ${theme.fonts[1]};\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n`;\n\nexport const EventDetailDate = styled.ul`\n  margin-right: 45px;\n`;\n\nexport const EventDetailDateLi = styled.li``;\n\nexport const EventDetailDateText = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 12.02px;\n  text-transform: uppercase;\n  margin-bottom: 7px;\n`;\n\nexport const EventDetailDateText2 = styled.p`\n  color: ${theme.colors.grey1};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 34px;\n  text-transform: uppercase;\n`;\n\nexport const DetailsBoxDiscr = styled.p`\n  color: ${theme.colors.grey2};\n  text-align: center;\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n\n  margin-top: 20px;\n  margin-bottom: 25px;\n`;\n\n// export const EventDetailTitle = styled.p``\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  DetailsBox,\n  DetailsBoxDiscr,\n  Event,\n  EventDetailBox,\n  EventDetailDate,\n  EventDetailDateLi,\n  EventDetailDateText,\n  EventDetailDateText2,\n  EventDetailTitle,\n  EventImages,\n  EventNavLink,\n  List,\n} from './EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\nimport { useContext, useEffect, useState } from 'react';\nimport { BtnLight, BtnLink } from 'components/baseStyles/Button.styled';\nimport { fetchData } from 'services/APIservice';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nexport const EventsList = ({ events }) => {\n  const { t } = useTranslation();\n  const [activeEvents, setActiveEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isHovered, setHovered] = useState(null);\n  // const today = new Date();\n  // const activeEvents = events.filter(({ date }) => new Date(date) >= today);\n  // const widthWindow = window.innerWidth;\n  const { selectedLanguage } = useContext(StatusContext);\n  const initialEvents = 6;\n  const [eventsNumber, setEventsNumber] = useState(initialEvents);\n\n  const handleMouseEnter = eventId => {\n    setHovered(eventId);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered(null);\n  };\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_eventID: it.article_eventID,\n              eventId: it.eventId,\n              date: it.date,\n              time: it.time,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setActiveEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  const handleEventsNumber = () => {\n    setEventsNumber(eventsNumber + 6);\n  };\n\n  return (\n    <List>\n      {events.map(event => {\n        const matchingActiveEvents = activeEvents.filter(\n          activeEvent => activeEvent.eventId === event.article_event\n        );\n        return (\n          // data-aos=\"zoom-in-up\" data-aos-delay=\"200\"\n          <Event key={event._id}>\n            <EventNavLink\n              onMouseEnter={() => handleMouseEnter(event._id)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <EventImages\n                src={\n                  event.image\n                    ? BASE_URL_IMG +\n                      'events/' +\n                      event.image.split('/')[event.image.split('/').length - 1]\n                    : defaultImg\n                }\n                alt={event.title}\n                loading=\"lazy\"\n              />\n\n              {isHovered === event._id && (\n                <EventDetailBox>\n                  <EventDetailTitle>{event.name}</EventDetailTitle>\n\n                  <DetailsBox>\n                    <EventDetailDate>\n                      <EventDetailDateLi>\n                        <EventDetailDateText>{t('Дата')}</EventDetailDateText>\n                      </EventDetailDateLi>\n                      <EventDetailDateLi>\n                        {matchingActiveEvents.map((ev, idx) => (\n                          <EventDetailDateText2 key={idx}>\n                            {new Date(ev.date).toLocaleDateString()}\n                          </EventDetailDateText2>\n                        ))}\n                      </EventDetailDateLi>\n                    </EventDetailDate>\n\n                    <ul>\n                      <li>\n                        <EventDetailDateText>{t('Час')}</EventDetailDateText>\n                      </li>\n                      <li>\n                        {matchingActiveEvents.map((ev, idx) => (\n                          <EventDetailDateText2 key={idx}>\n                            {ev.time}\n                          </EventDetailDateText2>\n                        ))}\n                      </li>\n                    </ul>\n                  </DetailsBox>\n\n                  <DetailsBoxDiscr>\n                    {event.description.length > 50\n                      ? event.description.slice(0, 50) + ' ...'\n                      : event.description}\n                  </DetailsBoxDiscr>\n\n                  <BtnLink to={`/events/${event.article_event}`}>\n                    <span>{t('Детальніше')}</span>\n                  </BtnLink>\n                </EventDetailBox>\n              )}\n            </EventNavLink>\n          </Event>\n        );\n      })}\n      {eventsNumber < events.length && (\n        <BtnLight onClick={handleEventsNumber}>\n          <span> {t('Показати більше')} </span>\n        </BtnLight>\n      )}\n    </List>\n  );\n};\n\nEventsList.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      language: PropTypes.string,\n      image: PropTypes.string,\n    })\n  ),\n};\n","import { useState } from \"react\";\nimport {\n  format,\n  subMonths,\n  addMonths,\n  startOfWeek,\n  addDays,\n  isSameDay,\n  lastDayOfWeek,\n  getWeek,\n  addWeeks,\n  subWeeks\n} from \"date-fns\";\nimport PropTypes from 'prop-types';\n\nconst Calendar = ({ showDetailsHandle }) => {\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [currentWeek, setCurrentWeek] = useState(getWeek(currentMonth));\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const changeMonthHandle = (btnType) => {\n    if (btnType === \"prev\") {\n      setCurrentMonth(subMonths(currentMonth, 1));\n    }\n    if (btnType === \"next\") {\n      setCurrentMonth(addMonths(currentMonth, 1));\n    }\n  };\n\n  const changeWeekHandle = (btnType) => {\n    //console.log(\"current week\", currentWeek);\n    if (btnType === \"prev\") {\n      //console.log(subWeeks(currentMonth, 1));\n      setCurrentMonth(subWeeks(currentMonth, 1));\n      setCurrentWeek(getWeek(subWeeks(currentMonth, 1)));\n    }\n    if (btnType === \"next\") {\n      //console.log(addWeeks(currentMonth, 1));\n      setCurrentMonth(addWeeks(currentMonth, 1));\n      setCurrentWeek(getWeek(addWeeks(currentMonth, 1)));\n    }\n  };\n\n  const onDateClickHandle = (day, dayStr) => {\n    setSelectedDate(day);\n    showDetailsHandle(dayStr);\n  };\n\n  const renderHeader = () => {\n    const dateFormat = \"MMM yyyy\";\n    // console.log(\"selected day\", selectedDate);\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-start\">\n          {/* <div className=\"icon\" onClick={() => changeMonthHandle(\"prev\")}>\n            prev month\n          </div> */}\n        </div>\n        <div className=\"col col-center\">\n          <span>{format(currentMonth, dateFormat)}</span>\n        </div>\n        <div className=\"col col-end\">\n          {/* <div className=\"icon\" onClick={() => changeMonthHandle(\"next\")}>next month</div> */}\n        </div>\n      </div>\n    );\n  };\n  const renderDays = () => {\n    const dateFormat = \"EEE\";\n    const days = [];\n    let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  };\n  const renderCells = () => {\n    const startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\n    const endDate = lastDayOfWeek(currentMonth, { weekStartsOn: 1 });\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell ${\n              isSameDay(day, new Date())\n                ? \"today\"\n                : isSameDay(day, selectedDate)\n                ? \"selected\"\n                : \"\"\n            }`}\n            key={day}\n            onClick={() => {\n              const dayStr = format(cloneDay, \"ccc dd MMM yy\");\n              onDateClickHandle(cloneDay, dayStr);\n            }}\n          >\n            <span className=\"number\">{formattedDate}</span>\n            <span className=\"bg\">{formattedDate}</span>\n          </div>\n        );\n        day = addDays(day, 1);\n      }\n\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  };\n  const renderFooter = () => {\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={() => changeWeekHandle(\"prev\")}>\n            prev week\n          </div>\n        </div>\n        <div>{currentWeek}</div>\n        <div className=\"col col-end\" onClick={() => changeWeekHandle(\"next\")}>\n          <div className=\"icon\">next week</div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"calendar\">\n      {renderHeader()}\n      {renderDays()}\n      {renderCells()}\n      {renderFooter()}\n    </div>\n  );\n};\n\nexport default Calendar;\n/**\n * Header:\n * icon for switching to the previous month,\n * formatted date showing current month and year,\n * another icon for switching to next month\n * icons should also handle onClick events to change a month\n */\nCalendar.propTypes = {showDetailsHandle : PropTypes.any};","import PropTypes from 'prop-types';\n\nconst Details = (props) => {\n    // eslint-disable-next-line react/prop-types\n    return <div>{props.data}</div>;\n  };\n  \n  export default Details;\n\n  Details.propTypes = {props : PropTypes.any};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventsList } from './EventsList/EventList';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { EventsSection } from './Events.styled';\nimport { Container, Title } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport Calendar from './Calendar/calendar';\nimport Details from './Calendar/details';\n\nexport const Events = () => {\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [data, setData] = useState(null);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_event: it.article_event,\n              name: it.name,\n              description: it.description,\n              image: it.image,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  const showDetailsHandle = dayStr => {\n    setData(dayStr);\n    setShowDetails(true);\n  };\n\n  return (\n    <EventsSection>\n      <Container>\n        <Title>{t('Events calendar')}</Title>\n        <Calendar showDetailsHandle={showDetailsHandle} />\n        <br />\n        {showDetails && <Details data={data} />}\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {/* && activeEvents.length  activeEvents={activeEvents}*/}\n        {events.length > 0 && !error && <EventsList events={events} />}\n\n        {/* <Heading>{t('Archive of past events')}</Heading> */}\n        {/* {isLoading ? onLoading() : onLoaded()} */}\n        {/* {error && onFetchError('Whoops, something went wrong')} */}\n        {/* {events.length > 0 && !error && <ArchiveEventsList events={events} />} */}\n      </Container>\n    </EventsSection>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Events } from 'components/Events/Events';\n\nconst EventsPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Events calendar\" description=\"Events calendar\" />\n      <Events />\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["EventsSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","Headline","_templateObject2","BtnLight","BtnAccent","BtnLink","NavLink","_templateObject3","List","Event","EventNavLink","EventImages","_templateObject4","EventDetailBox","_templateObject5","EventDetailTitle","_templateObject6","DetailsBox","_templateObject7","EventDetailDate","_templateObject8","EventDetailDateLi","_templateObject9","EventDetailDateText","_templateObject10","EventDetailDateText2","_templateObject11","DetailsBoxDiscr","_templateObject12","EventsList","_ref","events","t","useTranslation","activeEvents","setActiveEvents","useState","isLoading","setIsLoading","error","setError","isHovered","setHovered","selectedLanguage","useContext","StatusContext","eventsNumber","setEventsNumber","handleMouseLeave","useEffect","data","fetchData","onFetchError","langData","map","it","item","_id","article_eventID","eventId","date","time","push","_jsxs","children","event","matchingActiveEvents","filter","activeEvent","article_event","_jsx","onMouseEnter","handleMouseEnter","onMouseLeave","src","image","BASE_URL_IMG","split","length","defaultImg","alt","title","loading","name","ev","idx","Date","toLocaleDateString","description","slice","to","concat","onClick","handleEventsNumber","showDetailsHandle","currentMonth","setCurrentMonth","currentWeek","setCurrentWeek","getWeek","selectedDate","setSelectedDate","changeWeekHandle","btnType","subWeeks","addWeeks","onDateClickHandle","day","dayStr","className","format","renderDays","days","startDate","startOfWeek","weekStartsOn","i","addDays","renderCells","endDate","lastDayOfWeek","rows","formattedDate","cloneDay","isSameDay","props","Events","setEvents","showDetails","setShowDetails","setData","Container","Title","Calendar","Details","onLoading","onLoaded","EventsPage","window","scrollTo","top","left","behavior","_Fragment","SEO","Helmet","content"],"sourceRoot":""}