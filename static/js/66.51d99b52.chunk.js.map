{"version":3,"file":"static/js/66.51d99b52.chunk.js","mappings":"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","sources":["pages/Admin/Pages.styled.js","components/Admin/global/Topbar.jsx","components/Admin/global/Sidebar.jsx","pages/Admin/AdminPage.jsx","redux/events/operation.js","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AdminContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nwidth: 100%;\njustify-content: start;\nalign-items: start;\n`\n","\nimport { Box, IconButton} from \"@mui/material\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from \"../../../redux/auth/operations\";\nimport PropTypes from 'prop-types';\n\n\nconst Topbar = ({orders, active_events, messages}) => {\n    const dispatch = useDispatch();\n\n        // робимо ряд з новими замовленнями\n        let ordersNewList = [];\n        for(const it in orders){\n        if(orders[it].status === \"new\") {ordersNewList.push(orders[it])}\n        }\n        // робимо ряд з новими листами\n        let messagesNewList = [];\n        for(const it in messages){\n        if(messages[it].status === \"new\") {messagesNewList.push(messages[it])}\n        }\n\n    return <Box display=\"flex\" justifyContent=\"end\" p={2}>\n        {/* ICONS */}\n        <Box display=\"flex\">\n        <IconButton>\n            <EmailIcon/>\n            <p>{messagesNewList.length}</p>\n        </IconButton>\n        <IconButton>\n            <NotificationsOutlinedIcon/>\n            <p>{ordersNewList.length}</p>\n        </IconButton>\n        <IconButton>\n            <EventAvailableIcon/>\n            <p>{active_events.length}</p>\n        </IconButton>\n        <IconButton onClick={()=>{ dispatch(logOut());}}>\n            <PersonOutlinedIcon/>\n        </IconButton>\n        </Box>\n    </Box>\n}\n\nexport default Topbar\n\nTopbar.propTypes = {\n    orders: PropTypes.any.isRequired,\n    active_events: PropTypes.any.isRequired,\n    messages: PropTypes.any.isRequired,\n};","import { useState } from \"react\";\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport ContactsOutlinedIcon from \"@mui/icons-material/ContactsOutlined\";\nimport ReceiptOutlinedIcon from \"@mui/icons-material/ReceiptOutlined\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport BallotOutlined from \"@mui/icons-material/BallotOutlined\";\nimport PlaylistAddOutlined from \"@mui/icons-material/PlaylistAddOutlined\";\nimport { tokens } from \"theme\";\nimport default_user_img from \"../../../images/defaultUserPhoto.jpg\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getUser, getUserAvatar } from \"../../../redux/auth/selectors\";\nimport { BASE_URL_IMG } from \"helpers/constants\";\n\n\nconst Item = ({ title, to, icon, selected, setSelected }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <MenuItem\n      active={selected === title}\n      style={{\n        color: colors.grey[100],\n      }}\n      onClick={() => setSelected(title)}\n      icon={icon}\n    >\n      <Typography>{title}</Typography>\n      <Link to={to} />\n    </MenuItem>\n  );\n};\n\nconst Sidebar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [selected, setSelected] = useState(\"Dashboard\");\n  const user = useSelector(getUser);\n  const userAvatar = useSelector(getUserAvatar);\n  let avatar;\n  if (userAvatar !== '' && userAvatar !== undefined) {\n  avatar =\n      BASE_URL_IMG +\n      'avatars/' +\n      userAvatar.split('/')[userAvatar.split('/').length - 1];\n  }\n  return (\n    <Box\n      sx={{\n        \"& .pro-sidebar-inner\": {\n          background: `${colors.primary[400]} !important`,\n        },\n        \"& .pro-icon-wrapper\": {\n          backgroundColor: \"transparent !important\",\n        },\n        \"& .pro-inner-item\": {\n          padding: \"5px 35px 5px 20px !important\",\n        },\n        \"& .pro-inner-item:hover\": {\n          color: \"#868dfb !important\",\n        },\n        \"& .pro-menu-item.active\": {\n          color: \"#6870fa !important\",\n        },\n      }}\n    >\n      <ProSidebar collapsed={isCollapsed}>\n        <Menu iconShape=\"square\">\n          {/* LOGO AND MENU ICON */}\n          <MenuItem\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            icon={isCollapsed ? <MenuOutlinedIcon /> : undefined}\n            style={{\n              margin: \"10px 0 20px 0\",\n              color: colors.grey[100],\n            }}\n          >\n            {!isCollapsed && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                ml=\"15px\"\n              >\n                <Typography variant=\"h4\" color={colors.grey[100]} textTransform={\"capitalize\"}>\n                  {user.role}\n                </Typography>\n                <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\n                  <MenuOutlinedIcon />\n                </IconButton>\n              </Box>\n            )}\n          </MenuItem>\n\n          {!isCollapsed && (\n            <Box mb=\"25px\">\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img\n                  alt=\"profile-user\"\n                  width=\"100px\"\n                  height=\"100px\"\n                  src={avatar ? avatar : default_user_img}\n                  style={{ cursor: \"pointer\", borderRadius: \"50%\" }}\n                />\n              </Box>\n              <Box textAlign=\"center\">\n                <Typography\n                  variant=\"h4\"\n                  color={colors.grey[100]}\n                  fontWeight=\"bold\"\n                  sx={{ m: \"10px 0 0 0\" }}\n                  textTransform={\"uppercase\"}\n                >\n                  {user.name}\n                </Typography>\n                <Typography \n                  variant=\"h5\" \n                  color={colors.greenAccent[500]} \n                  textTransform={\"uppercase\"}>\n                  {user.role}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n\n          <Box paddingLeft={isCollapsed ? undefined : \"10%\"}>\n            <Item\n              title=\"Messages\"\n              to=\"messages\"\n              icon={<HomeOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n\n            <Typography\n              variant=\"h6\"\n              color={colors.grey[300]}\n              sx={{ m: \"15px 0 5px 20px\" }}\n            >\n              Data\n            </Typography>\n            <Item\n              title=\"Manage Team\"\n              to=\"/admin/specialists\"\n              icon={<PeopleOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Manage Category\"\n              to=\"/admin/categories\"\n              icon={<BallotOutlined />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Events Information\"\n              to=\"/admin/events\"\n              icon={<ContactsOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Activate event\"\n              to=\"/admin/activate_events\"\n              icon={<PlaylistAddOutlined />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Orders\"\n              to=\"/admin/orders\"\n              icon={<ReceiptOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n          </Box>\n        </Menu>\n      </ProSidebar>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n\nItem.propTypes = {\n  title: PropTypes.any.isRequired,\n  to: PropTypes.any.isRequired,\n  icon: PropTypes.any.isRequired,\n  selected: PropTypes.any.isRequired,\n  setSelected: PropTypes.any.isRequired,\n};\n","import { Outlet } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { fetchData } from 'services/APIservice';\nimport { useDispatch } from 'react-redux';\nimport { AdminContainer } from './Pages.styled';\nimport { onLoaded, onLoading } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { getCategory } from '../../redux/category/operation';\nimport { getSpecialists } from '../../redux/specialists/operation';\nimport { getEvents } from '../../redux/events/operation';\nimport { getActiveEvents } from '../../redux/activate_events/operation';\nimport Topbar from 'components/Admin/global/Topbar';\nimport Sidebar from 'components/Admin/global/Sidebar';\nimport { getOrders } from '../../redux/orders/operation';\nimport { getMessages } from '../../redux/messages/operation';\n\nconst AdminPage = () => {\n  const [category, setCategory] = useState([]);\n  const [specialists, setSpecialists] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [active_events, setActive_events] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/categories`);\n        dispatch(getCategory({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setCategory(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/specialists`);\n        dispatch(getSpecialists({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setSpecialists(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        dispatch(getEvents({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setEvents(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/active_events`);\n        dispatch(getActiveEvents({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setActive_events(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/orders`);\n        dispatch(getOrders({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setOrders(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n      setTimeout(()=>getData(), 60000)\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/messages`);\n        dispatch(getMessages({ ...data }));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setMessages(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n        setTimeout(()=>getData(), 60000)\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Administration\" description=\"Page Administration\" />\n      {isLoading ? onLoading() : onLoaded()}\n      {error && onFetchError('Whoops, something went wrong')}\n      <Topbar orders={orders} active_events={active_events} messages={messages}/>\n      <AdminContainer>\n        <Sidebar />\n        <Outlet />\n      </AdminContainer>\n    </>\n  );\n};\n\nexport default AdminPage;\n","import { eventsSlice } from \"./slice\";\n\nexport const getEvents = (b) => (dispatch) => {\n  dispatch(eventsSlice.actions.getEvents({ ...b }));\n};\n\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["AdminContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","orders","active_events","messages","dispatch","useDispatch","ordersNewList","it","status","push","messagesNewList","_jsx","Box","display","justifyContent","p","children","_jsxs","IconButton","EmailIcon","length","NotificationsOutlinedIcon","EventAvailableIcon","onClick","logOut","PersonOutlinedIcon","Item","title","to","icon","selected","setSelected","theme","useTheme","colors","tokens","palette","mode","MenuItem","active","style","color","grey","Typography","Link","Sidebar","isCollapsed","setIsCollapsed","useState","user","useSelector","getUser","userAvatar","getUserAvatar","avatar","undefined","BASE_URL_IMG","split","sx","background","concat","primary","backgroundColor","padding","ProSidebar","collapsed","Menu","iconShape","MenuOutlinedIcon","margin","alignItems","ml","variant","textTransform","role","mb","alt","width","height","src","default_user_img","cursor","borderRadius","textAlign","fontWeight","m","name","greenAccent","paddingLeft","HomeOutlinedIcon","PeopleOutlinedIcon","BallotOutlined","ContactsOutlinedIcon","PlaylistAddOutlined","ReceiptOutlinedIcon","AdminPage","category","setCategory","specialists","setSpecialists","events","setEvents","setActive_events","setOrders","setMessages","isLoading","setIsLoading","error","setError","useEffect","data","fetchData","getCategory","onFetchError","getSpecialists","b","eventsSlice","getActiveEvents","getData","getOrders","setTimeout","getMessages","window","scrollTo","top","left","behavior","_Fragment","SEO","description","onLoading","onLoaded","Topbar","Outlet","Helmet","content"],"sourceRoot":""}