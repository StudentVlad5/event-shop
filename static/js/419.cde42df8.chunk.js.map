{"version":3,"file":"static/js/419.cde42df8.chunk.js","mappings":"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","sources":["components/Events/Events.styled.js","components/baseStyles/CommonStyle.styled.js","components/Events/EventsList/EventList.styled.js","components/Events/EventsList/EventList.jsx","components/Events/ArchiveEventsList/ArchiveEventList.styled.js","components/Events/ArchiveEventsList/ArchiveEventList.jsx","components/ContextStatus/ContextStatus.jsx","components/Events/Events.jsx","pages/EventsPage.jsx","utils/SEO.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { Section, Headline } from 'components/baseStyles/CommonStyle.styled';\n\nexport const EventsSection = styled(Section)`\n  padding: 50px 0;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nexport const Heading = styled(Headline)`\n  margin-top: 30px;\n  margin-bottom: 20px;\n  text-align: center;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-top: 50px;\n    margin-bottom: 40px;\n    font-size: 42px;\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\nimport { theme } from './Variables.styled';\n\nconst puffInCenterAnimation = keyframes`\n  0% {\n    transform: scale(2);\n    filter: blur(4px);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1);\n    filter: blur(0px);\n    opacity: 1;\n  }\n`;\n\nconst Section = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 50px 0;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 80px 0;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding: 100px 0;\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 10px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 0 30px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-width: ${theme.breakpoints.desktop};\n    padding: 0 45px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-family: ${theme.fonts[2]};\n  font-size: 36px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 79.992px; /* 121.2% */\n  letter-spacing: -1px;\n  color: ${theme.white};\n\n  animation: ${puffInCenterAnimation} 0.7s cubic-bezier(0.47, 0, 0.745, 0.715)\n    both;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 42px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 56px;\n  }\n`;\n\nconst Headline = styled.h2`\n  font-family: ${theme.fonts[0]};\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 55.02px; /* 114.625% */\n\n  color: ${theme.colors.white};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 48px;\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 32.004px; /* 177.8% */\n  text-align: center;\n\n  color: ${theme.colors.white};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n  }\n`;\n\nexport { Container, Section, Title, Headline, Subtitle };\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  padding: 0 15px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    gap: 35px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 45px;\n    padding: 0;\n    margin-bottom: 100px;\n  }\n`;\n\nexport const Event = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  border-radius: 40px;\n  background: ${props => props.theme.white_fon};\n  overflow: hidden;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    flex-direction: row;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    padding: 20px 40px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: calc(100% - 466px);\n  }\n`;\n\nexport const EventNavLink = styled(NavLink)`\n  max-height: 322px;\n  overflow: hidden;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    max-height: 366px;\n  }\n`;\n\nexport const EventImages = styled.img`\n  width: 100%;\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 466px;\n    height: 100%;\n    max-height: 366px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${theme.scale};\n  }\n`;\n\nexport const DataPlaceWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  margin-bottom: 12px;\n`;\n\nexport const EventDate = styled.span`\n  color: ${props => props.theme.grey};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32.004px; /* 228.6% */\n`;\n\nexport const EventTitle = styled.p`\n  margin-bottom: 20px;\n\n  color: ${props => props.theme.black_text};\n  font-family: ${theme.fonts[0]};\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 22.004px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n    line-height: 32.004px; /* 177.8% */\n  }\n`;\n\nexport const EventDesc = styled.p`\n  margin-bottom: 10px;\n\n  color: ${props => props.theme.grey};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 22.004px;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n    line-height: 32.004px;\n  }\n`;\n\nexport const BtnLink = styled(NavLink)`\n  position: relative;\n  padding: 2px;\n  margin-left: 16px;\n\n  color: ${props => props.theme.black_text};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32.004px; /* 160.02% */\n  text-decoration: none;\n\n  transition: ${theme.transition};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 18px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${props => props.theme.black_text};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${props => props.theme.black_text};\n    border-left: 1px solid ${props => props.theme.black_text};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n\n    &::before,\n    &::after {\n      top: 4px;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n\n      @media screen and (min-width: ${theme.breakpoints.tablet}) {\n        top: 3px;\n      }\n\n      @media screen and (min-width: ${theme.breakpoints.desktop}) {\n        top: 2px;\n      }\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 0;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 80%;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  BtnLink,\n  DataPlaceWrapper,\n  DetailsWrapper,\n  Event,\n  EventDate,\n  EventDesc,\n  EventImages,\n  EventNavLink,\n  EventTitle,\n  List,\n} from './EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\n\nexport const EventsList = ({ events }) => {\n  const { t } = useTranslation();\n\n  const today = new Date();\n  const activeEvents = events.filter(({ date }) => new Date(date) >= today);\n  const widthWindow = window.innerWidth;\n\n  return (\n    <List>\n      {activeEvents.map(event => {\n        return (\n          <Event key={event._id} data-aos=\"zoom-in-up\" data-aos-delay=\"200\">\n            <EventNavLink to={`/events/${event._id}`}>\n              <EventImages\n                src={\n                  event.image\n                    ? BASE_URL_IMG +\n                      event.image.split('/')[event.image.split('/').length - 1]\n                    : defaultImg\n                }\n                alt={event.title}\n                width=\"325\"\n                height=\"322\"\n                loading=\"lazy\"\n              />\n            </EventNavLink>\n            <DetailsWrapper>\n              <DataPlaceWrapper>\n                <EventDate>\n                  {new Date(event.date).toLocaleDateString()} | {event.time}\n                </EventDate>\n                <EventDate>{event.location}</EventDate>\n              </DataPlaceWrapper>\n              <EventTitle>{event.title}</EventTitle>\n              {widthWindow && (\n                <EventDesc>\n                  {event.description.length > 300\n                    ? event.description.slice(0, 300) + ' ...'\n                    : event.description}\n                </EventDesc>\n              )}\n              <BtnLink to={`/events/${event._id}`}>\n                <span>{t('More')}</span>\n              </BtnLink>\n            </DetailsWrapper>\n          </Event>\n        );\n      })}\n    </List>\n  );\n};\n\nEventsList.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      image: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { theme } from 'components/baseStyles/Variables.styled';\nimport {\n  DetailsWrapper,\n  Event,\n  EventImages,\n} from '../EventsList/EventList.styled';\n\nexport const ArchiveList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  align-items: stretch;\n  gap: 20px;\n\n  padding: 0 15px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    gap: 35px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    gap: 45px;\n    padding: 0;\n    margin-bottom: 50px;\n  }\n`;\n\nexport const ArchiveEvent = styled(Event)`\n  flex-direction: column;\n  max-width: 466px;\n`;\n\nexport const ArchiveDetailsWrapper = styled(DetailsWrapper)`\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 100%;\n  }\n`;\n\nexport const ArchiveImage = styled(EventImages)`\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 466px;\n    height: 100%;\n    min-height: 256px;\n    max-height: 366px;\n  }\n`;\n\nexport const BtnMore = styled.button`\n  position: relative;\n  display: block;\n  margin: 0 auto;\n  padding: 2px;\n\n  color: ${props => props.theme.white_text};\n  font-family: ${theme.fonts[0]};\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32.004px; /* 160.02% */\n  text-transform: uppercase;\n\n  background-color: transparent;\n  border: none;\n  transition: ${theme.transition};\n  cursor: pointer;\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 20px;\n  }\n\n  &::before,\n  &::after,\n  & span::after,\n  & span::before {\n    content: '';\n    position: absolute;\n    top: 100%;\n    bottom: 0;\n    left: -16px;\n    width: 1px;\n    background: ${props => props.theme.white_text};\n    transition: ${theme.transition};\n  }\n\n  &::before {\n    right: -16px;\n    left: -16px;\n    width: auto;\n    background: 0;\n    border-right: 1px solid ${props => props.theme.white_text};\n    border-left: 1px solid ${props => props.theme.white_text};\n  }\n\n  &::after {\n    right: 0;\n    left: 0;\n    height: 1px;\n    width: auto;\n  }\n\n  & span {\n    position: relative;\n    display: inline-block;\n    padding: 2px;\n\n    &::before,\n    &::after {\n      top: 0;\n      left: auto;\n      right: auto;\n      width: 0;\n      height: 1px;\n      transition: ${theme.transition};\n    }\n\n    &::before {\n      left: -18px;\n    }\n\n    &::after {\n      right: -18px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    &::before {\n      top: 2px;\n    }\n    &::after {\n      right: -16px;\n      left: -16px;\n    }\n\n    & span::before,\n    & span::after {\n      width: 50%;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BASE_URL_IMG } from 'helpers/constants';\nimport {\n  ArchiveDetailsWrapper,\n  ArchiveEvent,\n  ArchiveList,\n  ArchiveImage,\n  BtnMore,\n} from './ArchiveEventList.styled';\nimport {\n  DataPlaceWrapper,\n  EventDate,\n  EventTitle,\n} from '../EventsList/EventList.styled';\nimport defaultImg from 'images/No-image-available.webp';\n\nexport const ArchiveEventsList = ({ events }) => {\n  const { t } = useTranslation();\n\n  const today = new Date();\n  const archiveEvents = events.filter(({ date }) => new Date(date) < today);\n\n  const [limit, setLimit] = useState(2);\n  const end = count => {\n    setLimit(prevState => prevState + count);\n  };\n  return (\n    <>\n      <ArchiveList>\n        {archiveEvents.slice(0, limit).map(event => {\n          return (\n            <ArchiveEvent\n              key={event._id}\n              data-aos=\"zoom-in-up\"\n              data-aos-delay=\"200\"\n            >\n              <NavLink to={`/events/${event._id}`}>\n                <ArchiveImage\n                  src={\n                    event.image\n                      ? BASE_URL_IMG +\n                        event.image.split('/')[\n                          event.image.split('/').length - 1\n                        ]\n                      : defaultImg\n                  }\n                  alt={event.title}\n                  width=\"325\"\n                  height=\"322\"\n                  loading=\"lazy\"\n                />\n              </NavLink>\n              <ArchiveDetailsWrapper>\n                <DataPlaceWrapper>\n                  <EventDate>\n                    {new Date(event.date).toLocaleDateString()} | {event.time}\n                  </EventDate>\n                  <EventDate>{event.location}</EventDate>\n                </DataPlaceWrapper>\n                <EventTitle>{event.title}</EventTitle>\n              </ArchiveDetailsWrapper>\n            </ArchiveEvent>\n          );\n        })}\n      </ArchiveList>\n      {archiveEvents.length > limit && (\n        <BtnMore type=\"button\" aria-label=\"More events\" onClick={() => end(2)}>\n          <span>{t('more events')}</span>\n        </BtnMore>\n      )}\n    </>\n  );\n};\n\nArchiveEventsList.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n      duration: PropTypes.string,\n      location: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      image: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport React, { createContext, useState } from 'react';\nimport { getFromStorage, saveToStorage } from 'services/localStorService';\n\nexport const StatusContext = createContext();\n\nexport const StatusProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    getFromStorage('chosenLanguage') || 'fr'\n  );\n\n  if (!getFromStorage('chosenLanguage')) {\n    saveToStorage('chosenLanguage', 'fr');\n  }\n  return (\n    <StatusContext.Provider\n      value={{\n        selectedLanguage,\n        setSelectedLanguage,\n      }}\n    >\n      {children}\n    </StatusContext.Provider>\n  );\n};\n\nStatusProvider.propTypes = {\n  children: PropTypes.any,\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventsList } from './EventsList/EventList';\nimport { ArchiveEventsList } from './ArchiveEventsList/ArchiveEventList';\nimport { fetchData } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { EventsSection, Heading } from './Events.styled';\nimport { Container, Title } from 'components/baseStyles/CommonStyle.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nexport const Events = () => {\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedLanguage } = useContext(StatusContext);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/events`);\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n\n        // const langData = [\n        //   ...new Set(\n        //     data.map(item => item[selectedLanguage]).filter(item => item !== undefined),\n        //   ),\n        // ];\n\n        let langData = [];\n        data.map(it => {\n          let item = [\n            {\n              _id: it._id,\n              article_event: it.article_event,\n              data: it.data,\n              time: it.time,\n              price: it.price,\n              seats: it.seats,\n              booking: it.booking,\n              vacancies: it.vacancies,\n              ...it[selectedLanguage],\n            },\n          ];\n          langData.push(item[0]);\n        });\n        setEvents(langData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [selectedLanguage]);\n\n  return (\n    <EventsSection>\n      <Container>\n        <Title>{t('Events calendar')}</Title>\n\n        <Heading>{t('Upcoming club meetings')}</Heading>\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {events.length > 0 && !error && <EventsList events={events} />}\n\n        <Heading>{t('Archive of past events')}</Heading>\n        {isLoading ? onLoading() : onLoaded()}\n        {error && onFetchError('Whoops, something went wrong')}\n        {events.length > 0 && !error && <ArchiveEventsList events={events} />}\n      </Container>\n    </EventsSection>\n  );\n};\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { Events } from 'components/Events/Events';\n\nconst EventsPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Events calendar\" description=\"Events calendar\" />\n      <Events />\n    </>\n  );\n};\n\nexport default EventsPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["EventsSection","styled","Section","_templateObject","_taggedTemplateLiteral","theme","Heading","Headline","_templateObject2","puffInCenterAnimation","keyframes","Container","_templateObject3","Title","_templateObject4","_templateObject5","_templateObject6","List","Event","props","white_fon","DetailsWrapper","EventNavLink","NavLink","EventImages","DataPlaceWrapper","EventDate","_templateObject7","grey","EventTitle","_templateObject8","black_text","EventDesc","_templateObject9","BtnLink","_templateObject10","EventsList","_ref","events","t","useTranslation","today","Date","activeEvents","filter","_ref2","date","widthWindow","window","innerWidth","_jsx","children","map","event","_jsxs","to","concat","_id","src","image","BASE_URL_IMG","split","length","defaultImg","alt","title","width","height","loading","toLocaleDateString","time","location","description","slice","ArchiveList","ArchiveEvent","ArchiveDetailsWrapper","ArchiveImage","BtnMore","white_text","ArchiveEventsList","archiveEvents","limit","setLimit","useState","_Fragment","type","onClick","end","count","prevState","StatusContext","createContext","Events","setEvents","error","setError","isLoading","setIsLoading","selectedLanguage","useContext","useEffect","data","fetchData","onFetchError","langData","it","item","article_event","price","seats","booking","vacancies","push","onLoading","onLoaded","EventsPage","scrollTo","top","left","behavior","SEO","Helmet","name","content"],"sourceRoot":""}