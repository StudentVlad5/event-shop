{"version":3,"file":"static/js/129.4eddd674.chunk.js","mappings":"2QAyBA,MA+FA,EA/F2BA,KACzB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAErCC,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,QACX,EAAEC,IAAMC,EAAAA,EAAAA,MAeRC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,IAETC,iBAAkBC,EAAAA,EAAAA,qBAClBC,SAAUA,CAACC,EAAQC,KAlBJC,KAAiB,IAAhB,OAAEF,GAAQE,EAC1BhB,GAAa,GACb,MAAM,MAAEU,GAAUI,GAMlBG,EAAAA,EAAAA,IAAU,sDACVjB,GAAa,GACbE,EAAS,UAAU,EASjBW,CAAS,CAAEC,SAAQC,UAAS,IAI1BG,KACHX,EAAOY,OAAOT,OAASH,EAAOa,QAAQV,OAAkC,KAAxBH,EAAOO,OAAOJ,OAYjE,OACEW,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,UACNF,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAAAD,UACRF,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAACd,iBAAkBC,EAAAA,EAAAA,qBAA6BW,UACrDG,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAACd,SAAUN,EAAOqB,aAAcC,aAAa,MAAKN,SAAA,EAC3DF,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAAAP,SAAE,qBACbG,EAAAA,EAAAA,MAACK,EAAAA,GAAS,CAAAR,SAAA,EACRG,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAACC,QAAQ,QAAOV,SAAA,EACxBF,EAAAA,EAAAA,KAAA,QAAAE,SAAOlB,EAAE,WACRE,EAAOY,OAAOe,MAAQ3B,EAAOa,QAAQc,MACpCb,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAAAZ,SAAEhB,EAAOY,OAAOe,OACpB,SAENb,EAAAA,EAAAA,KAACe,EAAAA,GAAc,CACbC,MAAO,CACLC,aAvBiBC,EAwBfhC,EAAOO,OAAOJ,MAxBW8B,EAyBzBjC,EAAOY,OAAOT,MAxBtB6B,EAEI,GAAAE,OAARD,EACGE,EAAAA,EAAAA,OAAAA,IACAA,EAAAA,EAAAA,OAAAA,WAHH,OA0BQR,KAAK,QACLS,KAAK,QACLC,MAAOrC,EAAOO,OAAOJ,MACrBmC,SAAUjC,EAAAA,EAAAA,qBAAAA,MACVkC,SAAUvC,EAAOwC,aACjBC,OAAQzC,EAAO0C,aAEhB1C,EAAOY,OAAOT,OAASH,EAAOa,QAAQV,OACrCW,EAAAA,EAAAA,KAAC6B,EAAAA,GAAQ,CAACb,MAAO,CAAEc,OAAQ,QAAS5B,SACjChB,EAAOY,OAAOT,QAEf,SAGNgB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAG,CACFf,MAAO,CAAEgB,OAAQ,QACjBV,KAAK,SACLW,SAAUpC,EACV,aAAW,4BAA2BK,SAAA,CAErCxB,EAAY,UAAY,SAAU,QAErC2B,EAAAA,EAAAA,MAAC6B,EAAAA,GAAO,CAAAhC,SAAA,EACNF,EAAAA,EAAAA,KAAA,QAAAE,SAAO,6BAAmC,KAC1CF,EAAAA,EAAAA,KAACmC,EAAAA,GAAU,CAACC,GAAG,SAAQlC,SAAE,uBApDLmC,IAACnB,EAAUC,CAyD/B,ECnGd,EAb2BmB,MACzBC,EAAAA,EAAAA,YAAU,KACRC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAW,GACvD,KAGDvC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAA3C,SAAA,EACEF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAACC,MAAM,kBAAkBC,YAAY,MACzChD,EAAAA,EAAAA,KAACvB,EAAkB,O","sources":["components/Auth/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\n// import { forgotPasswordAuth } from '../redux/auth/operations';\nimport schemas from 'utils/schemas';\nimport { onSuccess } from 'helpers/Messages/NotifyMessages.jsx';\nimport { Section, Container } from 'components/baseStyles/CommonStyle.styled';\nimport { theme } from 'components/baseStyles/Variables.styled.js';\nimport {\n  FormInputLogin,\n  FormStyled,\n  TitleLogin,\n  Btn,\n  BoxText,\n  StyledLink,\n  ErrorBox,\n} from '../LoginForm/LoginForm.styled.js';\nimport {\n  FormLabel,\n  Error,\n  FormField,\n} from 'components/baseStyles/Form.styled.js';\n\nconst ForgotPasswordForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { email } = values;\n    // dispatch(\n    //   forgotPasswordAuth({\n    //     email,\n    //   })\n    // );\n    onSuccess('password has been changed. Please check your email');\n    setIsLoading(false);\n    navigate(`/signin`);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: schemas.changePasswordSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) || formik.values.email === ''\n      ? true\n      : false;\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Formik validationSchema={schemas.changePasswordSchema}>\n          <FormStyled onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{'Forgot Password'}</TitleLogin>\n            <FormField>\n              <FormLabel htmlFor=\"email\">\n                <span>{t('Email')}</span>\n                {formik.errors.name && formik.touched.name ? (\n                  <Error>{formik.errors.name}</Error>\n                ) : null}\n              </FormLabel>\n              <FormInputLogin\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.email,\n                    formik.errors.email\n                  ),\n                }}\n                name=\"email\"\n                type=\"email\"\n                value={formik.values.email}\n                validate={schemas.changePasswordSchema.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n              {formik.errors.email && formik.touched.email ? (\n                <ErrorBox style={{ bottom: '22px' }}>\n                  {formik.errors.email}\n                </ErrorBox>\n              ) : null}\n            </FormField>\n\n            <Btn\n              style={{ height: 'auto' }}\n              type=\"submit\"\n              disabled={isValid}\n              aria-label=\"submit to change password\"\n            >\n              {isLoading ? 'Loading' : 'Change'}{' '}\n            </Btn>\n            <BoxText>\n              <span>{'Already have an account?'}</span>{' '}\n              <StyledLink to=\"/login\">{'Log In'}</StyledLink>\n            </BoxText>\n          </FormStyled>\n        </Formik>\n      </Container>\n    </Section>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport ForgotPasswordForm from 'components/Auth/ForgotPasswordForm/ForgotPasswordForm';\n\nconst ForgotPasswordPage = () => {\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Forgot Password\" description=\"\" />\n      <ForgotPasswordForm />\n    </>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["ForgotPasswordForm","isLoading","setIsLoading","useState","navigate","useDispatch","useNavigate","t","useTranslation","formik","useFormik","initialValues","email","validationSchema","schemas","onSubmit","values","action","_ref","onSuccess","isValid","errors","touched","_jsx","Section","children","Container","Formik","_jsxs","FormStyled","handleSubmit","autoComplete","TitleLogin","FormField","FormLabel","htmlFor","name","Error","FormInputLogin","style","borderColor","hasValue","isValide","concat","theme","type","value","validate","onChange","handleChange","onBlur","handleBlur","ErrorBox","bottom","Btn","height","disabled","BoxText","StyledLink","to","showAccentValidateInput","ForgotPasswordPage","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","title","description"],"sourceRoot":""}