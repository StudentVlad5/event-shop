{"version":3,"file":"static/js/817.d544f3d2.chunk.js","mappings":"4VAoBA,MAAMA,EAAOC,IAAiD,IAAhD,MAAEC,EAAK,GAAEC,EAAE,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAaL,EACtD,MAAMM,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MACpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAQ,CACPC,OAAQV,IAAaH,EACrBc,MAAO,CACLC,MAAOR,EAAOS,KAAK,MAErBC,QAASA,IAAMb,EAAYJ,GAC3BE,KAAMA,EAAKgB,SAAA,EAEXC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAElB,KACbmB,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACpB,GAAIA,MACD,EA2Jf,EAvJgBqB,KACd,MAAMjB,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,OAC7Ba,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCtB,EAAUC,IAAeqB,EAAAA,EAAAA,UAAS,aACnCC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IAC/B,IAAIC,EAOJ,MANmB,KAAfF,QAAoCG,IAAfH,IACzBE,EACIE,EAAAA,GACA,WACAJ,EAAWK,MAAM,KAAKL,EAAWK,MAAM,KAAKC,OAAS,KAGvDhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CACFC,GAAI,CACF,uBAAwB,CACtBC,WAAW,GAADC,OAAKhC,EAAOiC,QAAQ,KAAI,gBAEpC,sBAAuB,CACrBC,gBAAiB,0BAEnB,oBAAqB,CACnBC,QAAS,gCAEX,0BAA2B,CACzB3B,MAAO,sBAET,0BAA2B,CACzBA,MAAO,uBAETG,UAEFC,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CAACC,UAAWrB,EAAYL,UACjCP,EAAAA,EAAAA,MAACkC,EAAAA,GAAI,CAACC,UAAU,SAAQ5B,SAAA,EAEtBC,EAAAA,EAAAA,KAACP,EAAAA,GAAQ,CACPK,QAASA,IAAMO,GAAgBD,GAC/BrB,KAAMqB,GAAcJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,SAAMf,EAC3ClB,MAAO,CACLkC,OAAQ,gBACRjC,MAAOR,EAAOS,KAAK,MACnBE,UAEAK,IACAZ,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CACFa,QAAQ,OACRC,eAAe,gBACfC,WAAW,SACXC,GAAG,OAAMlC,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACiC,QAAQ,KAAKtC,MAAOR,EAAOS,KAAK,KAAMsC,cAAe,aAAapC,SAC3EQ,EAAK6B,QAERpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACvC,QAASA,IAAMO,GAAgBD,GAAaL,UACtDC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,YAMvBxB,IACAZ,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACqB,GAAG,OAAMvC,SAAA,EACZC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACa,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAQjC,UAC7DC,EAAAA,EAAAA,KAAA,OACEuC,IAAI,eACJC,MAAM,QACNC,OAAO,QACPC,IAAK9B,G,8jGACLjB,MAAO,CAAEgD,OAAQ,UAAWC,aAAc,YAG9CpD,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAAC4B,UAAU,SAAQ9C,SAAA,EACrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTiC,QAAQ,KACRtC,MAAOR,EAAOS,KAAK,KACnBiD,WAAW,OACX5B,GAAI,CAAE6B,EAAG,cACTZ,cAAe,YAAYpC,SAE1BQ,EAAKyC,QAERhD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTiC,QAAQ,KACRtC,MAAOR,EAAO6D,YAAY,KAC1Bd,cAAe,YAAYpC,SAC1BQ,EAAK6B,cAMd5C,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACiC,YAAa9C,OAAcS,EAAY,MAAMd,SAAA,EAChDC,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,YACNC,GAAG,YACHC,MAAMiB,EAAAA,EAAAA,KAACmD,EAAAA,EAAgB,IACvBnE,SAAUA,EACVC,YAAaA,KAGfe,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTiC,QAAQ,KACRtC,MAAOR,EAAOS,KAAK,KACnBqB,GAAI,CAAE6B,EAAG,mBAAoBhD,SAC9B,UAGDC,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,cACNC,GAAG,qBACHC,MAAMiB,EAAAA,EAAAA,KAACoD,EAAAA,EAAkB,IACzBpE,SAAUA,EACVC,YAAaA,KAEfe,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,kBACNC,GAAG,oBACHC,MAAMiB,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,IACrBrE,SAAUA,EACVC,YAAaA,KAEfe,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,qBACNC,GAAG,gBACHC,MAAMiB,EAAAA,EAAAA,KAACsD,EAAAA,EAAoB,IAC3BtE,SAAUA,EACVC,YAAaA,KAEfe,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,iBACNC,GAAG,yBACHC,MAAMiB,EAAAA,EAAAA,KAACuD,EAAAA,EAAmB,IAC1BvE,SAAUA,EACVC,YAAaA,KAEfe,EAAAA,EAAAA,KAACrB,EAAI,CACHE,MAAM,SACNC,GAAG,gBACHC,MAAMiB,EAAAA,EAAAA,KAACwD,EAAAA,EAAmB,IAC1BxE,SAAUA,EACVC,YAAaA,aAKjB,ECtLGwE,EAAQA,KACZzD,EAAAA,EAAAA,KAACG,EAAO,I,mCCFV,MAAMuD,E,QAAiBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4G,kCCSxC,MA0CA,EA1CkBC,KAChB,MAAOC,EAAUC,IAAe1D,EAAAA,EAAAA,UAAS,KAClC2D,EAAWC,IAAgB5D,EAAAA,EAAAA,WAAS,IACpC6D,EAAOC,IAAY9D,EAAAA,EAAAA,UAAS,MAC7B+D,GAAWC,EAAAA,EAAAA,MAyBjB,OAtBAC,EAAAA,EAAAA,YAAU,MACR,iBACEL,GAAa,GACb,IACE,MAAM,KAAEM,SAAeC,EAAAA,EAAAA,IAAU,eAEjC,GADAJ,GAASK,EAAAA,EAAAA,IAAY,IAAIF,MACpBA,EACH,OAAOG,EAAAA,EAAAA,IAAa,gCAEtBX,EAAYQ,EAKd,CAJE,MAAOL,GACPC,EAASD,EACX,CAAC,QACCD,GAAa,EACf,CACD,CAdD,EAcI,GACJ,KAEFK,EAAAA,EAAAA,YAAU,KACRK,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAW,GACvD,KAGDxF,EAAAA,EAAAA,MAAAyF,EAAAA,SAAA,CAAAlF,SAAA,EACEC,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAACrG,MAAM,iBAAiBsG,YAAY,wBACvClB,GAAYmB,EAAAA,EAAAA,MAAcC,EAAAA,EAAAA,KAC1BlB,IAASQ,EAAAA,EAAAA,IAAa,iCACvBnF,EAAAA,EAAAA,MAACkE,EAAc,CAAA3D,SAAA,EACfC,EAAAA,EAAAA,KAACyD,EAAK,KACNzD,EAAAA,EAAAA,KAACsF,EAAAA,GAAM,SAEN,C,kEC7CA,SAASJ,EAAGtG,GAA0B,IAAzB,MAAEC,EAAK,YAAEsG,GAAavG,EACxC,OACEY,EAAAA,EAAAA,MAAC+F,EAAAA,GAAM,CAAAxF,SAAA,EACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAQlB,KACRmB,EAAAA,EAAAA,KAAA,QAAMgD,KAAK,cAAcwC,QAASL,MAGxC,C","sources":["components/Admin/global/Sidebar.jsx","components/Admin/index.jsx","pages/Pages.styled.js","pages/AdminPage.jsx","utils/SEO.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport ContactsOutlinedIcon from \"@mui/icons-material/ContactsOutlined\";\nimport ReceiptOutlinedIcon from \"@mui/icons-material/ReceiptOutlined\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport BallotOutlined from \"@mui/icons-material/BallotOutlined\";\nimport PlaylistAddOutlined from \"@mui/icons-material/PlaylistAddOutlined\";\nimport { tokens } from \"theme\";\nimport default_user_img from \"../../../images/defaultUserPhoto.jpg\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getUser, getUserAvatar } from \"../../../redux/auth/selectors\";\nimport { BASE_URL_IMG } from \"helpers/constants\";\n\n\nconst Item = ({ title, to, icon, selected, setSelected }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <MenuItem\n      active={selected === title}\n      style={{\n        color: colors.grey[100],\n      }}\n      onClick={() => setSelected(title)}\n      icon={icon}\n    >\n      <Typography>{title}</Typography>\n      <Link to={to} />\n    </MenuItem>\n  );\n};\n\nconst Sidebar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [selected, setSelected] = useState(\"Dashboard\");\n  const user = useSelector(getUser);\n  const userAvatar = useSelector(getUserAvatar);\n  let avatar;\n  if (userAvatar !== '' && userAvatar !== undefined) {\n  avatar =\n      BASE_URL_IMG +\n      'avatars/' +\n      userAvatar.split('/')[userAvatar.split('/').length - 1];\n  }\n  return (\n    <Box\n      sx={{\n        \"& .pro-sidebar-inner\": {\n          background: `${colors.primary[400]} !important`,\n        },\n        \"& .pro-icon-wrapper\": {\n          backgroundColor: \"transparent !important\",\n        },\n        \"& .pro-inner-item\": {\n          padding: \"5px 35px 5px 20px !important\",\n        },\n        \"& .pro-inner-item:hover\": {\n          color: \"#868dfb !important\",\n        },\n        \"& .pro-menu-item.active\": {\n          color: \"#6870fa !important\",\n        },\n      }}\n    >\n      <ProSidebar collapsed={isCollapsed}>\n        <Menu iconShape=\"square\">\n          {/* LOGO AND MENU ICON */}\n          <MenuItem\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            icon={isCollapsed ? <MenuOutlinedIcon /> : undefined}\n            style={{\n              margin: \"10px 0 20px 0\",\n              color: colors.grey[100],\n            }}\n          >\n            {!isCollapsed && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                ml=\"15px\"\n              >\n                <Typography variant=\"h3\" color={colors.grey[100]} textTransform={\"capitalize\"}>\n                  {user.role}\n                </Typography>\n                <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\n                  <MenuOutlinedIcon />\n                </IconButton>\n              </Box>\n            )}\n          </MenuItem>\n\n          {!isCollapsed && (\n            <Box mb=\"25px\">\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img\n                  alt=\"profile-user\"\n                  width=\"100px\"\n                  height=\"100px\"\n                  src={avatar ? avatar : default_user_img}\n                  style={{ cursor: \"pointer\", borderRadius: \"50%\" }}\n                />\n              </Box>\n              <Box textAlign=\"center\">\n                <Typography\n                  variant=\"h2\"\n                  color={colors.grey[100]}\n                  fontWeight=\"bold\"\n                  sx={{ m: \"10px 0 0 0\" }}\n                  textTransform={\"uppercase\"}\n                >\n                  {user.name}\n                </Typography>\n                <Typography \n                  variant=\"h5\" \n                  color={colors.greenAccent[500]} \n                  textTransform={\"uppercase\"}>\n                  {user.role}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n\n          <Box paddingLeft={isCollapsed ? undefined : \"10%\"}>\n            <Item\n              title=\"Dashboard\"\n              to=\"dashboard\"\n              icon={<HomeOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n\n            <Typography\n              variant=\"h6\"\n              color={colors.grey[300]}\n              sx={{ m: \"15px 0 5px 20px\" }}\n            >\n              Data\n            </Typography>\n            <Item\n              title=\"Manage Team\"\n              to=\"/admin/specialists\"\n              icon={<PeopleOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Manage Category\"\n              to=\"/admin/categories\"\n              icon={<BallotOutlined />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Events Information\"\n              to=\"/admin/events\"\n              icon={<ContactsOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Activate event\"\n              to=\"/admin/activate_events\"\n              icon={<PlaylistAddOutlined />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Orders\"\n              to=\"/admin/orders\"\n              icon={<ReceiptOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n          </Box>\n        </Menu>\n      </ProSidebar>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n\nItem.propTypes = {\n  title: PropTypes.any.isRequired,\n  to: PropTypes.any.isRequired,\n  icon: PropTypes.any.isRequired,\n  selected: PropTypes.any.isRequired,\n  setSelected: PropTypes.any.isRequired,\n};\n","import Sidebar from \"./global/Sidebar\";\n\n\nexport const Admin = () => {\n  return <Sidebar/>;\n};\n","import styled from 'styled-components';\n\nexport const AdminContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nwidth: 100%;\njustify-content: start;\nalign-items: start;\n`\n","import { Outlet } from 'react-router-dom';\nimport { Admin } from 'components/Admin';\nimport React, { useEffect, useState } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { fetchData } from 'services/APIservice';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { AdminContainer } from './Pages.styled';\nimport { onLoaded, onLoading } from 'helpers/Loader/Loader';\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\nimport { getCategory } from '../redux/category/operation';\n\nconst AdminPage = () => {\n  const [category, setCategory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(`/categories`);\n        dispatch(getCategory({...data}));\n        if (!data) {\n          return onFetchError('Whoops, something went wrong');\n        }\n        setCategory(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })()\n  },[])\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Administration\" description=\"Page Administration\" />\n      {isLoading ? onLoading() : onLoaded()}\n      {error && onFetchError('Whoops, something went wrong')}\n      <AdminContainer>\n      <Admin/>\n      <Outlet/>\n      </AdminContainer>\n    </>\n  );\n};\n\nexport default AdminPage;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["Item","_ref","title","to","icon","selected","setSelected","theme","useTheme","colors","tokens","palette","mode","_jsxs","MenuItem","active","style","color","grey","onClick","children","_jsx","Typography","Link","Sidebar","isCollapsed","setIsCollapsed","useState","user","useSelector","getUser","userAvatar","getUserAvatar","avatar","undefined","BASE_URL_IMG","split","length","Box","sx","background","concat","primary","backgroundColor","padding","ProSidebar","collapsed","Menu","iconShape","MenuOutlinedIcon","margin","display","justifyContent","alignItems","ml","variant","textTransform","role","IconButton","mb","alt","width","height","src","cursor","borderRadius","textAlign","fontWeight","m","name","greenAccent","paddingLeft","HomeOutlinedIcon","PeopleOutlinedIcon","BallotOutlined","ContactsOutlinedIcon","PlaylistAddOutlined","ReceiptOutlinedIcon","Admin","AdminContainer","styled","_templateObject","_taggedTemplateLiteral","AdminPage","category","setCategory","isLoading","setIsLoading","error","setError","dispatch","useDispatch","useEffect","data","fetchData","getCategory","onFetchError","window","scrollTo","top","left","behavior","_Fragment","SEO","description","onLoading","onLoaded","Outlet","Helmet","content"],"sourceRoot":""}